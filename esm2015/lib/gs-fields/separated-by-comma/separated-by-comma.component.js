import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';
let GsSeparatedByCommaComponent = class GsSeparatedByCommaComponent extends GsGenericFieldComponent {
    constructor() {
        super(...arguments);
        this.fieldOption = [];
        this.value = '';
    }
    ngOnChanges(changes) {
        if (changes.field && changes.field.currentValue && changes.field.currentValue.config.value) {
            this.fieldOption = changes.field.currentValue.config.value.split(',');
        }
    }
    focusInput() {
        this.inputElement.nativeElement.focus();
    }
    removeValue(valIndex) {
        this.fieldOption.splice(valIndex, 1);
    }
    disableEnter(event) {
        event.preventDefault();
    }
    removeLastValue(event) {
        if (this.value === '' && event.keyCode === 8) {
            this.fieldOption.pop();
            return;
        }
    }
    removeAll() {
        this.fieldOption = [];
    }
    addValue(event) {
        if (this.value === '' || this.value === ',') {
            return;
        }
        if (event.keyCode === 188 || event.keyCode === 13) {
            const value = this.value.replace(/,/g, '');
            if (value === '') {
                return;
            }
            this.fieldOption.push(value);
            const valuesAsString = this.fieldOption.join(',');
            this.formGroup.controls[this.field.config.model].patchValue(valuesAsString);
            this.formGroup.controls[this.field.config.model].updateValueAndValidity();
            this.value = '';
            return;
        }
    }
};
tslib_1.__decorate([
    Input()
], GsSeparatedByCommaComponent.prototype, "field", void 0);
tslib_1.__decorate([
    ViewChild('inputElement', { static: true })
], GsSeparatedByCommaComponent.prototype, "inputElement", void 0);
GsSeparatedByCommaComponent = tslib_1.__decorate([
    Component({
        selector: 'gs-separated-by-comma',
        template: "<div class=\"gs-field\" \n  [class.gs-field-has-error]=\"validateField()\">\n  \n  <label\n    class=\"gs-field-box gs-field-separated-box\"\n    [class.gs-form-field-box-full]=\"field.config.label\">\n\n    <span\n      class=\"gs-field-label\"\n      *ngIf=\"field.config.label\">\n      {{ field.config.label | translate }}\n    </span>\n\n    <div class=\"gs-field-input gs-field-separated-input\">\n      <!-- input -->\n      <div class=\"gs-field-separated-input-item\">\n        <input\n          #inputElement\n          class=\"gs-field-input\"\n          type=\"text\"\n          [autocomplete]=\"'off'\"\n          [id]=\"field.config.model\"\n          [placeholder]=\"field.config.placeholder || field.config.label || field.config.model | translate\"\n          [(ngModel)]=\"value\"\n          (keydown.enter)=\"disableEnter($event)\"\n          (keydown)=\"removeLastValue($event)\"\n          (keyup)=\"addValue($event)\"/>\n        <button *ngIf=\"fieldOption.length > 0\" type=\"button\" (click)=\"removeAll()\">&times;</button>\n      </div>\n    </div>\n  </label>\n\n  <span class=\"gs-field-error\" *ngIf=\"validateField()\">\n    {{ getFieldError(field.config.model) | translate }}\n  </span>\n\n  <span class=\"gs-field-separated-values\" *ngIf=\"fieldOption\">\n    <span class=\"gs-field-separated-value\" *ngFor=\"let item of fieldOption; let i = index;\">\n      <span class=\"gs-field-separated-value-name\">{{ item }}</span>\n      <button class=\"gs-field-separated-value-remove\" type=\"button\" (click)=\"removeValue(i)\">\n        &times;\n      </button>\n    </span>\n  </span>\n</div>",
        styles: ["*{color:var(--gs-color-font,#706967);outline:0;box-sizing:border-box}input,option,select,textarea{border:none;outline:0;display:block;box-shadow:none;box-sizing:border-box}input::-webkit-input-placeholder,option::-webkit-input-placeholder,select::-webkit-input-placeholder,textarea::-webkit-input-placeholder{opacity:.5}input::-moz-placeholder,option::-moz-placeholder,select::-moz-placeholder,textarea::-moz-placeholder{opacity:.5}input::-ms-input-placeholder,option::-ms-input-placeholder,select::-ms-input-placeholder,textarea::-ms-input-placeholder{opacity:.5}input::placeholder,option::placeholder,select::placeholder,textarea::placeholder{opacity:.5}.disabled{opacity:var(--gs-disabled-opacity,.7);cursor:default;pointer-events:none}.button{-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out;cursor:pointer;border:none;text-align:center;font-weight:700;outline:0;padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-color,#fff);background:var(--gs-primary-button-background,#b8b4b4);border-radius:var(--gs-primary-button-border-radius,1rem)}.button:hover{opacity:.8}.button.button-primary{padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-color,#fff);background:var(--gs-primary-button-background,#ff2426);border:none;border-radius:var(--gs-primary-button-border-radius,1rem)}.button.button-secondary{padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-background,#ff2426);background:0 0;border:2px solid var(--gs-primary-button-background,#ff2426);border-radius:var(--gs-primary-button-border-radius,1rem)}*,input,select,textarea{font-size:var(--gs-font-size,.9rem);font-family:inherit;background-color:transparent}.gs-no-select{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.gs-field{position:relative}.gs-field.gs-field-has-error .gs-field-box{border:2px solid #ff2426}.gs-field.gs-field-has-error .gs-field-error{display:block}.gs-field-box{border:2px solid var(--gs-input-border-color,none);display:-ms-grid;display:grid;background-color:var(--gs-input-background,#fff);padding:var(--gs-input-padding,12px);border-radius:var(--gs-input-border-radius,1rem);height:51px}.gs-field-box .gs-field-label{color:#706967;font-size:.6rem;font-weight:600;letter-spacing:.1em;line-height:1;text-transform:uppercase;-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1;color:var(--gs-input-color,#332927);opacity:.5}.gs-field-box .gs-field-input{outline:0;border:none;width:100%;margin:0;font-weight:600;font-size:1rem;line-height:1;padding:0;-ms-grid-column:1;grid-column:1;-ms-grid-row:2;grid-row:2}.gs-field-box .gs-field-input :focus,.gs-field-box .gs-field-input:focus{outline:0}.gs-field-box .gs-field-input::-webkit-input-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::-moz-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::-ms-input-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-form-field_symbol{-ms-grid-column:2;grid-column:2;-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/3;-ms-grid-row-align:center;align-self:center;text-align:right}.gs-field-box.gs-field-box-full .gs-field-input{padding:.1rem 0 0}.gs-field-box.gs-input-check-box,.gs-field-box.gs-input-switch-box{-ms-grid-columns:1fr auto;grid-template-columns:1fr auto}.gs-field-box.gs-input-check-box .gs-field-label,.gs-field-box.gs-input-switch-box .gs-field-label{-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1;-ms-grid-row-align:center;align-self:center}.gs-field-box.gs-input-check-box .gs-input-check,.gs-field-box.gs-input-check-box .gs-input-switch,.gs-field-box.gs-input-switch-box .gs-input-check,.gs-field-box.gs-input-switch-box .gs-input-switch{-ms-grid-column:2;grid-column:2;-ms-grid-row:1;grid-row:1;-ms-grid-row-align:center;align-self:center}.gs-field-box.gs-field-box-icon{display:-ms-grid;display:grid;-ms-grid-columns:1fr 20px;grid-template-columns:1fr 20px}.gs-field-box.gs-field-box-icon .gs-field-icon{cursor:pointer;width:20px;fill:#706967;-ms-grid-column:2;grid-column:2;-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/3;-ms-grid-row-align:center;align-self:center}.gs-field-error,.gs-field-hint{font-size:.8rem;padding:.6rem 1rem;display:inline-block;margin-right:1rem}.gs-field-error{display:none;color:#ff2426}.gs-field-separated-values{margin:3px 0 0;display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-align:center;align-items:center}.gs-field-separated-values .gs-field-separated-value{padding:2px 6px;margin:0 3px 3px 0;color:#fff;background-color:#332927;border-radius:1rem;display:-ms-grid;display:grid;-ms-grid-columns:1fr 10px;grid-template-columns:1fr 10px;gap:3px}.gs-field-separated-values .gs-field-separated-value:last-child{margin-right:0}.gs-field-separated-values .gs-field-separated-value .gs-field-separated-value-remove{cursor:pointer;background:0 0;border:none;outline:0;padding:0;color:#fff;-ms-grid-row-align:center;align-self:center}.gs-field-separated-values .gs-field-separated-value .gs-field-separated-value-name{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#fff}.gs-field-separated-input{display:-webkit-box;display:flex;flex-wrap:wrap;width:100%;padding:0}.gs-field-separated-input .gs-field-separated-input-item{position:relative;display:-ms-grid;display:grid;-ms-grid-columns:1fr 24px;grid-template-columns:1fr 24px;width:100%}.gs-field-separated-input .gs-field-separated-input-item button{-ms-grid-column:2;grid-column:2;-ms-grid-row:1;grid-row:1;cursor:pointer;background:0 0;border:none;outline:0;padding:0;fill:var(--gs-color-neutral,#706967)}.gs-field-separated-input .gs-field-separated-input-item .gs-field-input{-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1;background:0 0;border:none;outline:0}"]
    })
], GsSeparatedByCommaComponent);
export { GsSeparatedByCommaComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VwYXJhdGVkLWJ5LWNvbW1hLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bncy9uZy1mb3Jtcy8iLCJzb3VyY2VzIjpbImxpYi9ncy1maWVsZHMvc2VwYXJhdGVkLWJ5LWNvbW1hL3NlcGFyYXRlZC1ieS1jb21tYS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBd0MsTUFBTSxlQUFlLENBQUM7QUFFbEcsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFPckYsSUFBYSwyQkFBMkIsR0FBeEMsTUFBYSwyQkFBNEIsU0FBUSx1QkFBdUI7SUFMeEU7O1FBUVMsZ0JBQVcsR0FBa0IsRUFBRSxDQUFDO1FBQ2hDLFVBQUssR0FBRyxFQUFFLENBQUM7SUFtRHBCLENBQUM7SUFqREMsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLEtBQUssSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLFlBQVksSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFO1lBQzFGLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDdkU7SUFDSCxDQUFDO0lBRU0sVUFBVTtRQUNmLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzFDLENBQUM7SUFFTSxXQUFXLENBQUMsUUFBZ0I7UUFDakMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFTSxZQUFZLENBQUMsS0FBWTtRQUM5QixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVNLGVBQWUsQ0FBQyxLQUFVO1FBQy9CLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxFQUFFLElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxDQUFDLEVBQUU7WUFDNUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUN2QixPQUFPO1NBQ1I7SUFDSCxDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFTSxRQUFRLENBQUMsS0FBVTtRQUN4QixJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssRUFBRSxJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssR0FBRyxFQUFFO1lBQzNDLE9BQU87U0FDUjtRQUVELElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxHQUFHLElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxFQUFFLEVBQUU7WUFDakQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRTNDLElBQUksS0FBSyxLQUFLLEVBQUUsRUFBRTtnQkFDaEIsT0FBTzthQUNSO1lBRUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0IsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDbEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQzVFLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLHNCQUFzQixFQUFFLENBQUM7WUFDMUUsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7WUFDaEIsT0FBTztTQUNSO0lBQ0gsQ0FBQztDQUNGLENBQUE7QUF0RFU7SUFBUixLQUFLLEVBQUU7MERBQWlDO0FBQ0k7SUFBNUMsU0FBUyxDQUFDLGNBQWMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztpRUFBMEI7QUFGM0QsMkJBQTJCO0lBTHZDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSx1QkFBdUI7UUFDakMsa21EQUFrRDs7S0FFbkQsQ0FBQztHQUNXLDJCQUEyQixDQXVEdkM7U0F2RFksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdTZXBhcmF0ZWRCeUNvbW1hIH0gZnJvbSAnLi4vLi4vZ3MtZm9ybXMud2lkZ2V0cyc7XG5pbXBvcnQgeyBHc0dlbmVyaWNGaWVsZENvbXBvbmVudCB9IGZyb20gJy4uL19nZW5lcmljLWZpZWxkL19nZW5lcmljLWZpZWxkLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2dzLXNlcGFyYXRlZC1ieS1jb21tYScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zZXBhcmF0ZWQtYnktY29tbWEuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9zZXBhcmF0ZWQtYnktY29tbWEuY29tcG9uZW50LnNhc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBHc1NlcGFyYXRlZEJ5Q29tbWFDb21wb25lbnQgZXh0ZW5kcyBHc0dlbmVyaWNGaWVsZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHB1YmxpYyBmaWVsZDogR1NlcGFyYXRlZEJ5Q29tbWE7XG4gIEBWaWV3Q2hpbGQoJ2lucHV0RWxlbWVudCcsIHsgc3RhdGljOiB0cnVlIH0pIGlucHV0RWxlbWVudDogRWxlbWVudFJlZjtcbiAgcHVibGljIGZpZWxkT3B0aW9uOiBBcnJheTxzdHJpbmc+ID0gW107XG4gIHB1YmxpYyB2YWx1ZSA9ICcnO1xuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoY2hhbmdlcy5maWVsZCAmJiBjaGFuZ2VzLmZpZWxkLmN1cnJlbnRWYWx1ZSAmJiBjaGFuZ2VzLmZpZWxkLmN1cnJlbnRWYWx1ZS5jb25maWcudmFsdWUpIHtcbiAgICAgIHRoaXMuZmllbGRPcHRpb24gPSBjaGFuZ2VzLmZpZWxkLmN1cnJlbnRWYWx1ZS5jb25maWcudmFsdWUuc3BsaXQoJywnKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZm9jdXNJbnB1dCgpIHtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlVmFsdWUodmFsSW5kZXg6IG51bWJlcikge1xuICAgIHRoaXMuZmllbGRPcHRpb24uc3BsaWNlKHZhbEluZGV4LCAxKTtcbiAgfVxuXG4gIHB1YmxpYyBkaXNhYmxlRW50ZXIoZXZlbnQ6IEV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVMYXN0VmFsdWUoZXZlbnQ6IGFueSkge1xuICAgIGlmICh0aGlzLnZhbHVlID09PSAnJyAmJiBldmVudC5rZXlDb2RlID09PSA4KSB7XG4gICAgICB0aGlzLmZpZWxkT3B0aW9uLnBvcCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVBbGwoKSB7XG4gICAgdGhpcy5maWVsZE9wdGlvbiA9IFtdO1xuICB9XG5cbiAgcHVibGljIGFkZFZhbHVlKGV2ZW50OiBhbnkpIHtcbiAgICBpZiAodGhpcy52YWx1ZSA9PT0gJycgfHwgdGhpcy52YWx1ZSA9PT0gJywnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDE4OCB8fCBldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnZhbHVlLnJlcGxhY2UoLywvZywgJycpO1xuXG4gICAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5maWVsZE9wdGlvbi5wdXNoKHZhbHVlKTtcbiAgICAgIGNvbnN0IHZhbHVlc0FzU3RyaW5nID0gdGhpcy5maWVsZE9wdGlvbi5qb2luKCcsJyk7XG4gICAgICB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmZpZWxkLmNvbmZpZy5tb2RlbF0ucGF0Y2hWYWx1ZSh2YWx1ZXNBc1N0cmluZyk7XG4gICAgICB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmZpZWxkLmNvbmZpZy5tb2RlbF0udXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpO1xuICAgICAgdGhpcy52YWx1ZSA9ICcnO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxufVxuIl19