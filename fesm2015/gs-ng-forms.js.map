{"version":3,"file":"gs-ng-forms.js","sources":["ng://@gs/ng-forms/lib/gs-forms.enums.ts","ng://@gs/ng-forms/lib/gs-forms.widgets.ts","ng://@gs/ng-forms/lib/gs-forms.models.ts","ng://@gs/ng-forms/lib/gs-forms.constants.ts","ng://@gs/ng-forms/lib/gs-forms.service.ts","ng://@gs/ng-forms/lib/gs-fields/_generic-field/_generic-field.component.ts","ng://@gs/ng-forms/lib/gs-fields/checkbox/checkbox.component.ts","ng://@gs/ng-forms/lib/gs-fields/currency-input/currency-input.component.ts","ng://@gs/ng-forms/lib/gs-fields/datepicker/datepicker.component.ts","ng://@gs/ng-forms/lib/gs-fields/dropdown/dropdown.component.ts","ng://@gs/ng-forms/lib/gs-fields/number-input/number-input.component.ts","ng://@gs/ng-forms/lib/gs-fields/password-input/password-input.component.ts","ng://@gs/ng-forms/lib/gs-fields/phone-input/phone-input.component.ts","ng://@gs/ng-forms/lib/gs-fields/radio-button/radio-button.component.ts","ng://@gs/ng-forms/lib/gs-fields/text-input/text-input.component.ts","ng://@gs/ng-forms/lib/gs-fields/textarea/textarea.component.ts","ng://@gs/ng-forms/lib/gs-fields/toggle/toggle.component.ts","ng://@gs/ng-forms/lib/gs-fields/separated-by-comma/separated-by-comma.component.ts","ng://@gs/ng-forms/lib/gs-fields/file-input/file-input.component.ts","ng://@gs/ng-forms/lib/gs-fields/two-data-input/two-data-input.component.ts","ng://@gs/ng-forms/lib/gs-fields/multiselect/multiselect.component.ts","ng://@gs/ng-forms/lib/gs-fields/color-picker/color-picker.component.ts","ng://@gs/ng-forms/lib/gs-fields/map-field/map-field.component.ts","ng://@gs/ng-forms/lib/gs-fields/divider/divider.component.ts","ng://@gs/ng-forms/lib/gs-fields/button/button.component.ts","ng://@gs/ng-forms/lib/gs-fields/show-data/show-data.component.ts","ng://@gs/ng-forms/lib/gs-fields/timepicker/timepicker.component.ts","ng://@gs/ng-forms/lib/gs-form.component.ts","ng://@gs/ng-forms/lib/gs-directives/digit-only/digit-only.directive.ts","ng://@gs/ng-forms/lib/gs-directives/click-outside/click-outside.directive.ts","ng://@gs/ng-forms/lib/gs-forms.module.ts","ng://@gs/ng-forms/public-api.ts","ng://@gs/ng-forms/gs-ng-forms.ts"],"sourcesContent":["export enum GFieldSelector {\n\n  /**\n   * Any string value:\n   * For example: text, email, address, etc.\n   * <input type=\"text\"/>\n   */\n  TEXT = 'text',\n\n  /**\n   * Any long string value:\n   * <textarea>\n   */\n  TEXTAREA = 'textarea',\n\n  /**\n   * Any sensitive value:\n   * For example: password, token, etc.\n   * <input type=\"password\"/>\n   * This will create a non native password type input with an eye button to toggle the input type from password to text.\n   */\n  PASSWORD = 'password',\n\n  /**\n   * Any numeric value:\n   * For example: age or quantity.\n   * <input type=\"number\"/>\n   */\n  NUMBER = 'number',\n\n  /**\n   * Any boolean value:\n   * For example: A true or false question.\n   * This will create a non native toggle type input\n   */\n  TOGGLE = 'toggle',\n\n  /**\n   * Any boolean value:\n   * For example: A true or false question.\n   * This will create a non native checkbox type input\n   */\n  CHECKBOX = 'checkbox',\n\n  /**\n   * Any array of options:\n   * For example: gender selection.\n   * This will create a non native radio type input for each option.\n   */\n  RADIO = 'radio',\n\n  /**\n   * Any array of options:\n   * For example: select and its options.\n   */\n  DROPDOWN = 'dropdown',\n\n  /**\n   * Tax type selector\n   */\n  TAX_TYPE = 'tax_type',\n\n  /**\n   * Any currency value:\n   * For example: any masked string formatted as currency value ($ 1.300,20)\n   * This will create a non native currency type input with currency format and symbol.\n   *\n   * Requires `currency pattern` and `currency symbol`.\n   */\n  CURRENCY = 'currency',\n\n  /**\n   * Any phone value:\n   * For example: any masked string formatted as phone value (+57 300 123 0031)\n   * This will create a non native phone type input.\n   *\n   * Requires `country code`.\n   */\n  PHONE = 'phone',\n\n  /**\n   * Any date value\n   * This will create a non native date picker\n   */\n  DATE = 'date',\n\n  /**\n   * Separated by comma field\n   */\n  COMMA = 'comma',\n\n  /**\n   * Any type file\n   * For Example: .pdf, .doc, .xml, etc\n   * <input type=\"file\"/>\n   */\n  FILE = 'file',\n\n  /**\n   * Two data input\n   * Creates a two inputs field\n   */\n  TWO_DATA = 'two_data',\n\n  /**\n   * Multiselect field\n   */\n  MULTISELECT = 'multiselect',\n\n  /**\n   * Any string value:\n   * For example: color string.\n   * <input type=\"color\"/>\n   */\n  COLOR = 'color',\n\n  /**\n   * Map input\n   * Get latitude and longitude using Google Maps\n   */\n  MAP = 'map',\n\n  /**\n   * TimePicker Input\n   * Any time value\n   */\n  TIME = 'time',\n\n  /**\n   * Divider\n   * This is not a field, it is a component to divide your form in sections\n   */\n  DIVIDER = 'divider',\n\n  /**\n   * Button\n   * This is not a field, it is a normal button to save, reset or anything else\n   */\n  BUTTON = 'button',\n\n  /**\n   * Show data\n   * This looks like a text field but is not.\n   * This is really useful to display a field like it was disabled but without the issue of having your input tag edited in the dom.\n   */\n  SHOW_DATA = 'show_data'\n}\n\nexport enum GFieldValueType {\n  STRING = 'string',\n  NUMBER = 'number'\n}\n\nexport enum GFieldValidatorType {\n  MIN = 'min',\n  MAX = 'max',\n  REQUIRED = 'required',\n  EMAIL = 'email',\n  MIN_LENGTH = 'minlength',\n  MAX_LENGTH = 'maxlength',\n  PATTERN = 'pattern'\n}\n\nexport enum GFieldCountryCode {\n  AR = 'ar',\n  BO = 'bo',\n  BR = 'br',\n  CA = 'ca',\n  CL = 'cl',\n  CO = 'co',\n  CR = 'cr',\n  EC = 'ec',\n  MX = 'mx',\n  PE = 'pe',\n  US = 'us',\n  UY = 'uy',\n  VE = 've'\n}\n\nexport enum GFieldValueButtonType {\n  SUBMIT = 'submit',\n  RESET = 'reset',\n  CUSTOM = 'custom'\n}\n","import { GFieldSelector } from './gs-forms.enums';\nimport {\n  GField,\n  GFieldConfiguration,\n  GFieldOptionValuesConfiguration,\n  GFieldCountryFormmatConfiguration,\n  GFieldBooleanConfiguration,\n  GFieldNumberConfiguration,\n  GFieldFileConfiguration,\n  GFieldDividerConfiguration,\n  GFieldTwoDataConfiguration,\n  GFieldButtonConfiguration,\n  GFieldMapConfiguration\n} from './gs-forms.models';\n\n/**\n * Text widget\n */\nexport class GTextField implements GField {\n  selector = GFieldSelector.TEXT;\n\n  constructor(public config: GFieldConfiguration) {}\n}\n\n/**\n * Textarea widget\n */\nexport class GTextareaField implements GField {\n  selector = GFieldSelector.TEXTAREA;\n\n  constructor(public config: GFieldConfiguration) { }\n}\n\n/**\n * Password widget\n */\nexport class GPasswordField implements GField {\n  selector = GFieldSelector.PASSWORD;\n\n  constructor(public config: GFieldConfiguration) { }\n}\n\n/**\n * Number widget\n */\nexport class GNumberField implements GField {\n  selector = GFieldSelector.NUMBER;\n\n  constructor(public config: GFieldNumberConfiguration) { }\n}\n\n/**\n * Toggle widget\n */\nexport class GToggleField implements GField {\n  selector = GFieldSelector.TOGGLE;\n\n  constructor(public config: GFieldBooleanConfiguration) { }\n}\n\n/**\n * Checkbox widget\n */\nexport class GCheckboxField implements GField {\n  selector = GFieldSelector.CHECKBOX;\n\n  constructor(public config: GFieldBooleanConfiguration) { }\n}\n\n/**\n * Radio widget\n */\nexport class GRadioField implements GField {\n  selector = GFieldSelector.RADIO;\n\n  constructor(public config: GFieldOptionValuesConfiguration) { }\n}\n\n/**\n * Dropdown widget\n */\nexport class GDropdownField implements GField {\n  selector = GFieldSelector.DROPDOWN;\n\n  constructor(public config: GFieldOptionValuesConfiguration) { }\n}\n\n/**\n * Tax document widget\n * @deprecated\n */\nexport class GTaxDocumentTypeField implements GField {\n  selector = GFieldSelector.TAX_TYPE;\n\n  constructor(public config: GFieldCountryFormmatConfiguration) { }\n}\n\n/**\n * Currency widget\n */\nexport class GCurrencyField implements GField {\n  selector = GFieldSelector.CURRENCY;\n\n  constructor(public config: GFieldCountryFormmatConfiguration) { }\n}\n\n/**\n * Phone widget\n */\nexport class GPhoneField implements GField {\n  selector = GFieldSelector.PHONE;\n\n  constructor(public config: GFieldCountryFormmatConfiguration) { }\n}\n\n/**\n * Datepicker widget\n */\nexport class GDatePickerField implements GField {\n  selector = GFieldSelector.DATE;\n\n  constructor(public config: GFieldConfiguration) { }\n}\n\n/**\n * Separated by Comma widget\n */\nexport class GSeparatedByComma implements GField {\n  selector = GFieldSelector.COMMA;\n\n  constructor(public config: GFieldConfiguration) { }\n}\n\n/**\n * Image/File widget\n */\nexport class GFieldFile implements GField {\n  selector = GFieldSelector.FILE;\n\n  constructor(public config: GFieldFileConfiguration) { }\n}\n\n/**\n * Two data input widget\n */\nexport class GTwoDataInput implements GField {\n  selector = GFieldSelector.TWO_DATA;\n\n  constructor(public config: GFieldTwoDataConfiguration) {}\n}\n\n/**\n * Multiselect widget\n */\nexport class GMultiselectField implements GField {\n  selector = GFieldSelector.MULTISELECT;\n\n  constructor(public config: GFieldOptionValuesConfiguration) { }\n}\n\n/**\n * Color picker widget\n */\nexport class GColorPickerField implements GField {\n  selector = GFieldSelector.COLOR;\n\n  constructor(public config: GFieldConfiguration) {}\n}\n\n/**\n * Map widget\n */\nexport class GMapField {\n  selector = GFieldSelector.MAP;\n\n  constructor(public config: GFieldMapConfiguration) {}\n}\n\n/**\n * Time field in 24 hour format\n */\nexport class GTimeField {\n  selector = GFieldSelector.TIME;\n\n  constructor(public config: GFieldConfiguration) {}\n}\n\n/**\n * Divider widget\n */\nexport class GDivider {\n  selector = GFieldSelector.DIVIDER;\n  notWidget = true;\n\n  constructor(public config: GFieldDividerConfiguration) {}\n}\n\n/**\n * Button widget\n */\nexport class GButton {\n  selector = GFieldSelector.BUTTON;\n  notWidget = true;\n\n  constructor(public config: GFieldButtonConfiguration) {}\n}\n\n/**\n * Show-data widget\n */\nexport class GShowData {\n  selector = GFieldSelector.SHOW_DATA;\n  notWidget = true;\n\n  constructor(public config: GFieldConfiguration) {}\n}\n","import { GFieldCountryCode, GFieldSelector, GFieldValidatorType, GFieldValueType, GFieldValueButtonType } from './gs-forms.enums';\n\nexport interface GFieldOptionValue {\n  value: string | number | boolean;\n  text: string;\n}\n\nexport interface GFieldOptionValueExists extends GFieldOptionValue {\n  exists?: boolean;\n}\n\nexport type GFieldOptionValues = Array<GFieldOptionValue>;\nexport type GFieldExistsOptionValues = Array<GFieldOptionValueExists>;\n\nexport interface GFieldTwoDataInputOptions {\n  /**\n   * Value type\n   */\n  type?: GFieldValueType;\n  /**\n   * Input validator\n   *\n   * If null it will try to use the `config.validators`\n   */\n  validators?: GFieldValidators;\n  /**\n   * Placeholder\n   */\n  placeholder?: string;\n}\n\n/**\n * Form options\n */\nexport interface GFormOptions {\n  /**\n   * Pass any argument to the form:\n   *\n   * @example\n   * <form [autocomplete]=\"yourOptions.autocomplete\">\n   */\n  autocomplete?: string;\n  /**\n   * Disable submit if the form has errors.\n   */\n  onErrorDisableSubmit?: boolean;\n  /**\n   * Set default country using `GFieldCountryCode` enum form gs-field\n   */\n  country?: GFieldCountryCode;\n  /**\n   * Object containing options for fields like `GDropdownField` where `[key: string]` is the model name of the `GField`.\n   */\n  fieldValues?: {\n    [key: string]: GFieldOptionValues;\n  };\n  layout?: {\n    /**\n     * Number to specify the quantity of columns, an string to pass any valid value for `grid-template-columns`\n     * Number example: 3 (will render 3 columns for each row)\n     * String example: auto 200px repeat(2, 1fr)\n     */\n    columns?: number | string;\n    /**\n     * If true, the form labels will not be displayed.\n     */\n    hideFormLabels?: boolean;\n    /**\n     * Padding for the body and footer of the form\n     */\n    innerPadding?: string;\n  };\n  context?: {\n    saveButton?: {\n      text?: string;\n      show?: boolean;\n    };\n    cancelButton?: {\n      text?: string;\n      show?: boolean;\n    }\n  };\n}\n\n/**\n * Field validators\n */\nexport interface GFieldValidators {\n  [GFieldValidatorType.MIN]?: number;\n  [GFieldValidatorType.MAX]?: number;\n  [GFieldValidatorType.REQUIRED]?: boolean;\n  [GFieldValidatorType.EMAIL]?: boolean;\n  [GFieldValidatorType.MIN_LENGTH]?: number;\n  [GFieldValidatorType.MAX_LENGTH]?: number;\n  [GFieldValidatorType.PATTERN]?: string | RegExp;\n}\n\n/**\n * Default field configuration\n */\nexport class GFieldConfiguration {\n  /**\n   * form control name\n   */\n  model: string;\n  /**\n   * Field validators\n   *\n   * Available validators are:\n   *   [GFieldValidatorType.MIN]?: number;\n   *   [GFieldValidatorType.MAX]?: number;\n   *   [GFieldValidatorType.REQUIRED]?: boolean;\n   *   [GFieldValidatorType.EMAIL]?: boolean;\n   *   [GFieldValidatorType.MIN_LENGTH]?: number;\n   *   [GFieldValidatorType.MAX_LENGTH]?: number;\n   *   [GFieldValidatorType.PATTERN]?: string | RegExp;\n   *\n   */\n  validators?: GFieldValidators;\n  /**\n   * Field label. To hide label set its value to null\n   */\n  label?: string;\n  /**\n   * Field placeholder. If not specified will use label or model\n   */\n  placeholder?: string;\n  /**\n   * Field default value\n   */\n  value?: string | number | boolean | object;\n  /**\n   * Set the `autocomplete` attribute of an `input`\n   */\n  autocomplete?: string;\n  /**\n   * Dynamically display/hide this field by setting this property\n   */\n  displayIf?: {\n    /**\n     * Model that will be evaluated\n     */\n    model: string;\n    /**\n     * Display this field if that model has this value\n     */\n    hasValue: any\n  } = null;\n  /**\n   * Field position on the grid columns\n   * Has to be a valid value for css `grid-column` attribute\n   *\n   * For example: '1 / 3' | '2'\n   */\n  gridColumn?: string;\n  /**\n   * Field position on the grid rows\n   * Has to be a valid value for css `grid-row` attribute\n   *\n   * For example: '1 / 3' | '2'\n   */\n  gridRow?: string;\n  /**\n   * Show symbol in this field if it's necessary\n   */\n  symbol?: string;\n}\n\n/**\n * Field configuration for only string fields\n */\nexport class GFieldStringConfiguration extends GFieldConfiguration {\n  /**\n   * Field default value\n   */\n  value?: boolean;\n}\n\n/**\n * Field configuration for only string fields\n */\nexport class GFieldMapConfiguration extends GFieldConfiguration {\n  /**\n   * If true will display Google Map modal\n   */\n  showMap?: boolean;\n}\n\n/**\n * Field configuration for only number fields\n */\nexport class GFieldNumberConfiguration extends GFieldConfiguration {\n  /**\n   * Field default value\n   */\n  value?: number | string;\n  /**\n   * set input decimal\n   */\n  decimal?: boolean;\n  /**\n   * set precision decimal\n   */\n  precision?: number;\n}\n\n/**\n * Field configuration for only boolean fields\n */\nexport class GFieldBooleanConfiguration extends GFieldConfiguration {\n  /**\n   * Field default value\n   */\n  value?: boolean;\n}\n\n/**\n * Field configuration including option values for `GRadioField` and `GDropdownField`\n */\nexport class GFieldOptionValuesConfiguration extends GFieldConfiguration {\n  /**\n   * Field value options\n   */\n  optionValues?: GFieldOptionValues;\n  /**\n   * If true this field will replace its `optionValues` with one passed in `FormOptions`\n   */\n  externalOptions?: boolean;\n}\n\n/**\n * Field configuration including country option for `GCurrencyField` and `GPhoneField`\n */\nexport class GFieldCountryFormmatConfiguration extends GFieldConfiguration {\n  /**\n   * Country configuration\n   */\n  country?: GFieldCountryCode;\n  /**\n   * If true the country can be changed\n   */\n  editCountry?: boolean;\n}\n\n/**\n * Field configuration for `GFieldFile`\n */\nexport class GFieldFileConfiguration extends GFieldConfiguration {\n  /**\n   * If true it will return the file as binary instead of trying to upload it\n   */\n  returnFile?: boolean;\n  /**\n   * Upload url configuration\n   */\n  api?: {\n    /**\n     * Url to make the http request\n     */\n    url: string;\n    /**\n     * Http method for the request\n     * One of: 'post' || 'put'\n     */\n    method: string;\n    /**\n     * Property name in multipart form\n     */\n    fileParamName: string;\n  };\n  /**\n   * Supported file extensions\n   * For example: '.pdf, .doc, .xml, etc'\n   */\n  accept?: string;\n  /**\n   * valid limit size\n   */\n  size?: number;\n  /**\n   * Default file value\n   */\n  value?: File;\n}\n\n/**\n * Field configuration for `GTwoDataInput`\n */\nexport class GFieldTwoDataConfiguration extends GFieldConfiguration {\n  /**\n   * If has value it will show it in the middle of the to inputs\n   */\n  divider?: string;\n  /**\n   * Options for each input\n   */\n  options?: {\n    left?: GFieldTwoDataInputOptions;\n    right?: GFieldTwoDataInputOptions;\n  };\n  /**\n   * Grid column size for each input\n   */\n  grid?: [string, string];\n  /**\n   * Set the default value for each input\n   */\n  value?: {\n    /**\n     * left input value\n     */\n    left: string | number;\n    /**\n     * right input value\n     */\n    right: string | number;\n  };\n}\n\n/**\n * Field configuration for `GDivider`\n */\nexport class GFieldDividerConfiguration extends GFieldConfiguration {\n  /**\n   * Use the divider as a section headline with a title\n   */\n  seccionName?: string;\n  /**\n   * Divider padding\n   */\n  padding?: string;\n  /**\n   * Divider padding\n   */\n  dividerColor?: string;\n  /**\n   * If true the divider horizontal line wont be showed\n   */\n  hideLine?: boolean;\n  /**\n   * A little description\n   */\n  description?: string;\n}\n\n/**\n * Field configuration for `GButton`\n */\nexport class GFieldButtonConfiguration extends GFieldConfiguration {\n  /**\n   * action button\n   */\n  action: GFieldValueButtonType;\n  /**\n   * identifier button\n   */\n  id?: string;\n}\n\n/**\n * Field interface\n */\nexport interface GField {\n  selector: GFieldSelector;\n  config: GFieldConfiguration | GFieldOptionValuesConfiguration | GFieldCountryFormmatConfiguration | GFieldDividerConfiguration;\n  notWidget?: boolean;\n  rappyStyle?: {};\n}\n\n/**\n * Form fields type\n */\nexport type GFormFields = Array<GField>;\n\n/**\n * Form fields type as readonly type\n */\nexport type GFormFieldsReadOnly = ReadonlyArray<GField>;\n\n/**\n * Location interface and its dependencies\n */\nexport interface GLocation {\n  tax: Array<{\n    name: string;\n    value: string;\n  }>;\n  country: {\n    name: string;\n    alpha2Code: string;\n  };\n  phoneFormat: {\n    code: string;\n    mask: string;\n  };\n  currencyFormat: {\n    code: string;\n    symbol: string;\n    thousands: string;\n    decimal: string;\n    precision: number;\n  };\n  lanLng?: {\n    lat: number,\n    lng: number\n  };\n  disabled?: boolean;\n}\n\nexport interface GInputStyle {\n  /* Input padding */\n  padding?: string;\n  /* Input text color */\n  color?: string;\n  /* Input backgroud */\n  background?: string;\n  /* Input border size */\n  borderSize?: string;\n  /* Input border style */\n  borderStyle?: string;\n  /* Input border color */\n  borderColor?: string;\n  /* Input radious */\n  borderRadius?: string;\n  /* Input border top width/size */\n  borderTop?: string;\n  /* Input border right width/size */\n  borderRight?: string;\n  /* Input border bottom width/size */\n  borderBottom?: string;\n  /* Input border left width/size */\n  borderLeft?: string;\n}\n\n/**\n * Library styles\n *\n * @description\n * Send style parameters to the library\n *\n */\nexport interface GStyles {\n  color?: {\n    /**\n     * Font color\n     * default: \"inherit\"\n     */\n    font?: string;\n\n    /**\n     * Primary color, used in important UI elements background and color\n     * default: \"#4588fd\"\n     */\n    primary?: string;\n\n    /**\n     * Secondary color, used in some UI elements background and color\n     * default: \"#7a9e9f\"\n     */\n    secondary?: string;\n\n    /**\n     * Neutral color, used in some UI elements background and color\n     * default: \"#4f6367\"\n     */\n    neutral?: string;\n\n    /**\n     * Border color\n     * default: \"#eeeeee\"\n     */\n    border?: string;\n\n    /**\n     * White color, all white colors used in UI elements\n     * default: \"#ffffff\"\n     */\n    white?: string;\n  };\n  ui?: {\n    /**\n     * Font size, all fonts size\n     * default: \".9rem\"\n     */\n    fontSize?: string;\n\n    /**\n     * Inner padding\n     */\n    padding?: string;\n\n    /**\n     * Input opacity when it's disabled\n     * default: \".7\"\n     */\n    disabledOpacity?: string;\n\n    /**\n     * Input and button style\n     * Go to `GInputStyle` for detail\n     */\n    input?: GInputStyle;\n    primaryButton?: GInputStyle;\n    secondaryButton?: GInputStyle;\n  };\n}\n","import { GLocation } from './gs-forms.models';\n\n// https://lowpostayuda.zendesk.com/hc/es/articles/115004070469-Nombres-Identificaci%C3%B3n-tributaria-por-pa%C3%ADses\n// http://www.wtng.info/wtng-54-ar.html\n\nexport const LOCATION: { [key: string]: GLocation } = {\n  ar: {\n    tax: [\n      {\n        name: 'CUIT (Código Único de Identificación Tributaria)',\n        value: 'CUIT'\n      }\n    ],\n    country: {\n      name: 'Argentina',\n      alpha2Code: 'AR'\n    },\n    phoneFormat: {\n      code: '54',\n      mask: '000 00000000'\n    },\n    currencyFormat: {\n      code: 'ARS',\n      symbol: '$',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  bo: {\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Bolivia',\n      alpha2Code: 'BO'\n    },\n    phoneFormat: {\n      code: '591',\n      mask: '000 0000000'\n    },\n    currencyFormat: {\n      code: 'BOB',\n      symbol: 'Bs.',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  br: {\n    tax: [\n      {\n        name: 'CPF (Cadastro de Persona Física)',\n        value: 'CPF'\n      },\n      {\n        name: 'CNPJ (Cadastro de Persona Jurídica)',\n        value: 'CNPJ'\n      }\n    ],\n    country: {\n      name: 'Brazil',\n      alpha2Code: 'BR'\n    },\n    phoneFormat: {\n      code: '55',\n      mask: '00 0 0000 0000'\n    },\n    currencyFormat: {\n      code: 'BRL',\n      symbol: 'R$',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  ca: {\n    disabled: true,\n    tax: [\n      {\n        name: 'SIN (Social Insurance Number)',\n        value: 'SIN'\n      },\n      {\n        name: `NAS (numéro d'assurance social)`,\n        value: 'NAS'\n      }\n    ],\n    country: {\n      name: 'Canada',\n      alpha2Code: 'CA'\n    },\n    phoneFormat: {\n      code: '1',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'CAD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  cl: {\n    tax: [\n      {\n        name: 'RUT (Rol Único Tributario)',\n        value: 'RUT'\n      }\n    ],\n    country: {\n      name: 'Chile',\n      alpha2Code: 'CL'\n    },\n    phoneFormat: {\n      code: '56',\n      mask: '00 0000000'\n    },\n    currencyFormat: {\n      code: 'CLP',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 0\n    }\n  },\n  co: {\n    tax: [\n      {\n        name: 'NIT (Número de Identificación Tributaria)',\n        value: 'NIT'\n      }\n    ],\n    country: {\n      name: 'Colombia',\n      alpha2Code: 'CO'\n    },\n    phoneFormat: {\n      code: '57',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'COP',\n      symbol: '$',\n      thousands: '.',\n      decimal: ',',\n      precision: 0\n    },\n    lanLng: {\n      lat: 4.6565365,\n      lng: -74.1248367\n    }\n  },\n  cr: {\n    disabled: true,\n    tax: [\n      {\n        name: 'NITE (Número de Identificación Tributaria Especial)',\n        value: 'NITE'\n      }\n    ],\n    country: {\n      name: 'Costa Rica',\n      alpha2Code: 'CR'\n    },\n    phoneFormat: {\n      code: '506',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'CRC',\n      symbol: '₡',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  ec: {\n    disabled: true,\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Ecuador',\n      alpha2Code: 'EC'\n    },\n    phoneFormat: {\n      code: '593',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'USD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  mx: {\n    tax: [\n      {\n        name: 'RFC (Registro Federal de Contribuyentes)',\n        value: 'RFC'\n      }\n    ],\n    country: {\n      name: 'Mexico',\n      alpha2Code: 'MX'\n    },\n    phoneFormat: {\n      code: '52',\n      mask: '00 0000 0000'\n    },\n    currencyFormat: {\n      code: 'MXN',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  pe: {\n    tax: [\n      {\n        name: 'RUC (Registro Único de Contribuyentes)',\n        value: 'RUC'\n      }\n    ],\n    country: {\n      name: 'Peru',\n      alpha2Code: 'PE'\n    },\n    phoneFormat: {\n      code: '51',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'PEN',\n      symbol: 'S/.',\n      thousands: '.',\n      decimal: ',',\n      precision: 2\n    }\n  },\n  us: {\n    disabled: true,\n    tax: [\n      {\n        name: 'TIN (Taxpayer Identification Number)',\n        value: 'TIN'\n      }\n    ],\n    country: {\n      name: 'United States',\n      alpha2Code: 'US'\n    },\n    phoneFormat: {\n      code: '1',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'USD',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  uy: {\n    tax: [\n      {\n        name: 'RUT (Registro Único Tributario)',\n        value: 'RUT'\n      }\n    ],\n    country: {\n      name: 'Uruguay',\n      alpha2Code: 'UY'\n    },\n    phoneFormat: {\n      code: '598',\n      mask: '000000000000'\n    },\n    currencyFormat: {\n      code: 'UYU',\n      symbol: '$',\n      thousands: ',',\n      decimal: '.',\n      precision: 2\n    }\n  },\n  ve: {\n    disabled: true,\n    tax: [\n      {\n        name: 'RIF (Registro de Información Fiscal)',\n        value: 'RIF'\n      }\n    ],\n    country: {\n      name: 'Venezuela',\n      alpha2Code: 'VE'\n    },\n    phoneFormat: {\n      code: '58',\n      mask: '000 000 0000'\n    },\n    currencyFormat: {\n      code: 'VEF',\n      symbol: 'Bs.',\n      thousands: '.',\n      decimal: ',',\n      precision: 0\n    }\n  }\n};\n\nexport const VALIDATION_MESSAGES: { [key: string]: { [key: string]: string } } = {\n  en: {\n    ERR_MIN: 'The value must be greater than or equal to ${param}',\n    ERR_MAX: 'The value must be less than or equal to ${param}',\n    ERR_REQUIRED: 'This field is required',\n    ERR_EMAIL: 'The email must have a valid format',\n    ERR_MIN_LENGTH: 'The value must be at least ${param} characters',\n    ERR_MAX_LENGTH: 'The value must have a maximum of ${param} characters',\n    ERR_PATTERN: 'The value format is not correct',\n    DEFAULT: 'This field has an unknown error',\n    ERR_REQUIRED_TWO_DATA_RIGHT: 'The right field is required',\n    ERR_REQUIRED_TWO_DATA_LEFT: 'The left field is required',\n    ERR_REQUIRED_MIN: 'Minutes are required',\n    ERR_REQUIRED_HOUR: 'Hours are required',\n    ERR_REQUIRED_FULLTIME: 'Hours and minutes are required',\n    ERR_PATTERN_MIN: 'Minutes format is invalid',\n    ERR_PATTERN_HOUR: 'Hours format is invalid',\n    ERR_PATTERN_FULLTIME: 'Hours and minutes format are invalid'\n  },\n  es: {\n    ERR_MIN: 'El valor debe ser mayor o igual que ${param}',\n    ERR_MAX: 'El valor debe ser menor o igual que ${param}',\n    ERR_REQUIRED: 'Esta campo es requerido',\n    ERR_EMAIL: 'El correo debe tener un formato válido',\n    ERR_MIN_LENGTH: 'El valor debe tener al menos ${param} caracteres',\n    ERR_MAX_LENGTH: 'El valor debe tener un máximo de ${param} caracteres',\n    ERR_PATTERN: 'El formato del valor no es correcto.',\n    DEFAULT: 'Este campo tiene un error desconocido',\n    ERR_REQUIRED_TWO_DATA_RIGHT: 'El campo de la derecha es requerido',\n    ERR_REQUIRED_TWO_DATA_LEFT: 'El campo de la izquierda es requerido',\n    ERR_REQUIRED_MIN: 'Los minutos son requeridos',\n    ERR_REQUIRED_HOUR: 'Las horas son requeridas',\n    ERR_REQUIRED_FULLTIME: 'Las horas y los minutos son requeridos',\n    ERR_PATTERN_MIN: 'El formato de los minutos es incorrecto',\n    ERR_PATTERN_HOUR: 'El formato de las horas es incorrecto',\n    ERR_PATTERN_FULLTIME: 'El formato de horas y minutos es incorrecto'\n  }\n};\n\nexport const MESSAGES: { [key: string]: { [key: string]: string } } = {\n  en: {\n    SELECT_ADDRESS: 'Select address'\n  },\n  es: {\n    SELECT_ADDRESS: 'Selecciones una dirección'\n  }\n};\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { GFormFields, GField, GFieldOptionValues, GFormFieldsReadOnly } from './gs-forms.models';\nimport { GFieldValidatorType } from './gs-forms.enums';\nimport { TranslateService } from '@ngx-translate/core';\nimport { VALIDATION_MESSAGES, MESSAGES } from './gs-forms.constants';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GsFormsService {\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private http: HttpClient\n  ) { }\n\n  public buildErrors(validator: string, value: any): Validators {\n    switch (validator) {\n      case GFieldValidatorType.MIN:\n        return Validators.min(value);\n\n      case GFieldValidatorType.MAX:\n        return Validators.max(value);\n\n      case GFieldValidatorType.REQUIRED:\n        return Validators.required;\n\n      case GFieldValidatorType.EMAIL:\n        return Validators.email;\n\n      case GFieldValidatorType.MIN_LENGTH:\n        return Validators.minLength(value);\n\n      case GFieldValidatorType.MAX_LENGTH:\n        return Validators.maxLength(value);\n\n      case GFieldValidatorType.PATTERN:\n        return Validators.pattern(value);\n    }\n  }\n\n  private setDefaultFormObject(field: GField, formObject: object, hasValidators: boolean): object {\n    formObject[field.config.model] = [];\n    formObject[field.config.model].push({\n      value: field.config.value,\n      disabled: false\n    });\n\n    const validators = [];\n    const fields = field.config.validators;\n\n    for (const validator in fields) {\n      if (Object.prototype.hasOwnProperty.call(fields, validator) && fields[validator]) {\n        validators.push(this.buildErrors(validator, fields[validator]));\n      }\n    }\n\n    if (hasValidators) {\n      formObject[field.config.model].push(Validators.compose(validators));\n    }\n    return formObject;\n  }\n\n  public buildForm(formField: GFormFields): FormGroup {\n    const formObject = new Object();\n\n    for (const field of formField) {\n      if (field.config.model && !field.notWidget) {\n        this.setDefaultFormObject(field, formObject, field.config.validators ? true : false);\n      }\n    }\n\n    return this.formBuilder.group(formObject);\n  }\n\n  public fieldError(field: any): string {\n    const error = field.errors;\n\n    if (error[GFieldValidatorType.MIN]) {\n      return this.getValidationMessage('ERR_MIN', error[GFieldValidatorType.MIN].min);\n\n    } else if (error[GFieldValidatorType.MAX]) {\n      return this.getValidationMessage('ERR_MAX', error[GFieldValidatorType.MAX].max);\n\n    } else if (error[GFieldValidatorType.REQUIRED]) {\n      return this.getValidationMessage('ERR_REQUIRED');\n\n    } else if (error[GFieldValidatorType.EMAIL]) {\n      return this.getValidationMessage('ERR_EMAIL');\n\n    } else if (error[GFieldValidatorType.MIN_LENGTH]) {\n      return this.getValidationMessage('ERR_MIN_LENGTH', error[GFieldValidatorType.MIN_LENGTH].requiredLength);\n\n    } else if (error[GFieldValidatorType.MAX_LENGTH]) {\n      return this.getValidationMessage('ERR_MAX_LENGTH', error[GFieldValidatorType.MAX_LENGTH].requiredLength);\n\n    } else if (error[GFieldValidatorType.PATTERN]) {\n      return this.getValidationMessage('ERR_PATTERN');\n\n    } else {\n      return this.getValidationMessage('DEFAULT');\n    }\n  }\n\n  public getValidationMessage(key: string, param?: string) {\n    let lang = this.translateService.currentLang;\n\n    if (!lang) {\n      console.warn(`translateService.currentLang is not set, using default language: 'en'`);\n      lang = 'en';\n    }\n\n    let messageLang = VALIDATION_MESSAGES.en;\n\n    if (!VALIDATION_MESSAGES[lang]) {\n      console.warn(`We don't have support for language ${lang}. Please email us to hi@tavoohoh.com. Using default language: 'en'`);\n    } else {\n      messageLang = VALIDATION_MESSAGES[lang];\n    }\n\n    let message = messageLang[key];\n\n    if (param) {\n      message = message.replace('${param}', param);\n    }\n\n    return message;\n  }\n\n  public getMessage(key: string, param?: string) {\n    const messageLang = !this.translateService.currentLang ? MESSAGES.en : MESSAGES[this.translateService.currentLang];\n    let message = messageLang[key];\n    if (param) {\n      message = message.replace('${param}', param);\n    }\n    return message;\n  }\n\n  public getLang(): string {\n    return this.translateService.getDefaultLang();\n  }\n\n  public uploadFileServices(url: string, method: string, file: File, paramName: string): Observable<Response> {\n    const formData = new FormData();\n    formData.append(paramName, file);\n\n    return this.http[method](url, formData);\n  }\n\n  /**\n   * @description\n   * Convert an array of values `Array<{[key: string]: any}> | Array<{[key: string]: any, [key: string]: any}>`\n   *\n   * @param options\n   * An array of values\n   * @param optionValue\n   * The key to be mapped to `GFieldOptionValues` key `value`\n   * @param optionText\n   * The key to be mapped to `GFieldOptionValues` key `text`\n   *\n   * @key value\n   * The value used in a select option\n   * @key text\n   * The text used inside of select option\n   */\n  public mapFieldOptionValues(options: Array<{}>, optionValue: string, optionText: string, ): GFieldOptionValues {\n    const mappedValues = options.map(obj => {\n      return {\n        value: obj[optionValue],\n        text: obj[optionText]\n      };\n    });\n\n    return mappedValues;\n  }\n\n  /**\n   * @description\n   * Patch form values\n   *\n   * @param formFields your `GFormFields`\n   * @param formValues an object of values like `FormGroup` value.\n   * The keys of `formValues` most match the model name of your `GFields`\n   */\n  public patchFormValues(\n    formFields: GFormFields | GFormFieldsReadOnly,\n    formValues: { [key: string]: any },\n    resetForm?: boolean,\n    resetFields?: boolean\n  ): GFormFields {\n\n    if (!resetFields) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < formFields.length; i++) {\n        formFields[i].config.value = null;\n      }\n    }\n\n    if (!resetForm) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < formFields.length; i++) {\n        if (formValues[formFields[i].config.model]) {\n          formFields[i].config.value = formValues[formFields[i].config.model];\n        }\n      }\n    }\n\n    return formFields as GFormFields;\n  }\n\n  public getAddress(lan, lng, apikey): Observable<any> {\n    return this.http.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lan},${lng}&result_type=street_address&key=${apikey}`);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GsFormsService } from '../../gs-forms.service';\nimport { FormGroup, ValidationErrors } from '@angular/forms';\nimport { GFieldValidatorType } from '../../gs-forms.enums';\n\n@Component({\n  template: ``\n})\nexport class GsGenericFieldComponent {\n  @Input() public field: any;\n  @Input() public formGroup: FormGroup;\n\n  public fieldValidatorType = GFieldValidatorType;\n\n  constructor(\n    public formsService: GsFormsService\n  ) { }\n\n  public validateField($event?: any): ValidationErrors {\n    return this.formGroup.controls[this.field.config.model].dirty && this.formGroup.controls[this.field.config.model].errors;\n  }\n\n  public getFieldError($event?: any): string {\n    return this.formsService.fieldError(this.formGroup.controls[this.field.config.model]);\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { GCheckboxField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.sass']\n})\nexport class GsCheckboxComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GCheckboxField;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes && changes.field && changes.field.currentValue) {\n      this.field = changes.field.currentValue;\n    }\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { GCurrencyField } from '../../gs-forms.widgets';\nimport { GFieldValidatorType, GFieldCountryCode } from '../../gs-forms.enums';\nimport { LOCATION } from '../../gs-forms.constants';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-currency-input',\n  templateUrl: './currency-input.component.html',\n  styleUrls: ['./currency-input.component.sass']\n})\nexport class GsCurrencyInputComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GCurrencyField;\n  @Input() private countryGlobal: GFieldCountryCode;\n\n  public pattern: string | RegExp;\n  public prefix: string;\n  public suffix: string;\n  public value = '';\n\n  private thousandsSeparator: string;\n  private decimalSeparator: string;\n  private precision: number;\n\n  public fieldValidatorType = GFieldValidatorType;\n\n  ngOnChanges(changes: SimpleChanges) {\n    let location = null;\n\n    if (changes.field && changes.field.currentValue.config.country) {\n      location = LOCATION[changes.field.currentValue.config.country];\n\n    } else if (changes.countryGlobal && changes.countryGlobal.currentValue) {\n      location = LOCATION[changes.countryGlobal.currentValue];\n\n    } else {\n      return this.returnBuildingError();\n    }\n\n    this.prefix = location.currencyFormat.symbol;\n    this.suffix = location.currencyFormat.code;\n    this.thousandsSeparator = location.currencyFormat.thousands;\n    this.decimalSeparator = location.currencyFormat.decimal;\n    this.precision = location.currencyFormat.precision;\n\n    if (changes.field.currentValue.config.value) {\n      this.value = changes.field.currentValue.config.value.toString().replace('.', '');\n    }\n\n    this.formatCurrency(false);\n  }\n\n  public formatCurrency(keyup: boolean) {\n    let inputVal = this.value || '0';\n\n    // mark input as dirty\n    if (keyup) {\n      this.formGroup.controls[this.field.config.model].markAsDirty();\n    }\n\n    // remove any leading zeros\n    if (inputVal.substring(0, 1) === '0') {\n      inputVal = inputVal.replace(/^[0|\\D]*/, '');\n    }\n\n    // format decimal if applies\n    if (!inputVal || inputVal.length === 1 && inputVal.substring(0, 1) === '0') {\n      let emptyDecimals = '0';\n\n      if (this.precision > 0) {\n        for (let index = 0; index < this.precision; index++) {\n          emptyDecimals = emptyDecimals + '0';\n        }\n      }\n      inputVal = emptyDecimals;\n    }\n\n    const cleanValue = inputVal.replace(/\\D/g, '');\n\n    let decimals = null;\n    let thousands = null;\n\n    // format number as currency\n    if (this.precision > 0) {\n      decimals = cleanValue.slice(this.precision - this.precision * 2);\n\n      if (decimals.length < this.precision) {\n        for (let index = 0; index < this.precision - Number(decimals); index++) {\n          decimals = '0' + decimals;\n        }\n        thousands = '0';\n      } else {\n        thousands = cleanValue.substring(0, cleanValue.length - this.precision) || '0';\n      }\n\n    } else {\n      thousands = cleanValue;\n    }\n\n    const formattedThousands = thousands.replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    const controlValue = `${thousands}${decimals ? '.' + decimals : ''}`;\n\n    this.value = formattedThousands + (decimals ? this.decimalSeparator + decimals : '');\n\n    setTimeout(() => {\n      this.formGroup.controls[this.field.config.model].patchValue(Number(controlValue));\n      this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n    });\n  }\n\n  public returnBuildingError() {\n    return console.error(\n      'GS Form building err: Please provide country for currency field:' + '\\n\\n' +\n      'In your component make sure you are passing a valid country to `GCurrencyField`:' + '\\n\\n' +\n      '\\xa0' + 'public formFields: GFormFields = [' + '\\n' +\n      '\\xa0\\xa0' + 'new GCurrencyField({' + '\\n' +\n      '\\xa0\\xa0\\xa0' + `model: 'currency',` + '\\n' +\n      '\\xa0\\xa0\\xa0' + `country: GFieldCountryCode.CO` + '\\n' +\n      '\\xa0\\xa0\\xa0' + '// other properties' + '\\n' +\n      '\\xa0\\xa0' + '}),' + '\\n' +\n      '\\xa0' + '];' + '\\n\\n' +\n      'Or In your component make sure you are passing a valid country to `GFormOptions`:' + '\\n\\n' +\n      '\\xa0' + 'public formOptions: GFormOptions = {' + '\\n' +\n      '\\xa0\\xa0' + 'country: GFieldCountryCode.CO' + '\\n' +\n      '\\xa0\\xa0' + '// other properties' + '\\n' +\n      '\\xa0' + '};' + '\\n\\n'\n    );\n  }\n\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { GDatePickerField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\nconst MONTHS = {\n  en: [\n    'january',\n    'february',\n    'march',\n    'april',\n    'may',\n    'june',\n    'july',\n    'august',\n    'september',\n    'october',\n    'november',\n    'december'\n  ],\n  es: [\n    'enero',\n    'febrero',\n    'marzo',\n    'abril',\n    'mayo',\n    'junio',\n    'julio',\n    'agosto',\n    'septiembre',\n    'octubre',\n    'noviembre',\n    'diciembre'\n  ],\n  pr: [\n    'janeiro',\n    'fevereiro',\n    'marcha',\n    'abril',\n    'pode',\n    'junho',\n    'julho',\n    'agosto',\n    'setembro',\n    'outubro',\n    'novembro',\n    'dezembro'\n  ]\n};\n\nconst WEEKDAYS = {\n  en: [\n    'm', 't', 'w', 't', 'f', 's', 's'\n  ],\n  es: [\n    'l', 'm', 'm', 'j', 'v', 's', 'd'\n  ],\n  pr: [\n    's', 't', 'q', 'q', 's', 's', 'd'\n  ]\n};\n\nenum ShowSelector {\n  DAY = 'day',\n  MONTH = 'month',\n  YEAR = 'year'\n}\n\n@Component({\n  selector: 'gs-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.sass']\n})\nexport class GsDatePickerComponent extends GsGenericFieldComponent implements OnInit, OnChanges {\n  @Input() public field: GDatePickerField;\n  public dateValue: string;\n  public lang: string;\n  public months: Array<string>;\n  public weekdays: Array<string>;\n\n  // displayed date\n  public currentMonth;\n  public currentYear;\n  public daysInPreviousMonthWeek = [];\n  public daysInCurrentMonth: Array<{ day: number, status: 'string' }> = [];\n  public daysInNextMonthWeek = [];\n\n  // selected day\n  private selectedDate = new Date();\n  private date = new Date();\n\n  // selectors UI\n  public showSelector: ShowSelector = ShowSelector.DAY;\n  public showSelectorType = ShowSelector;\n  public yearUiArray = new Array(12);\n  public yearMultiplier = 0;\n  public showDatePickerSelector = false;\n\n  ngOnInit() {\n    this.lang = this.formsService.getLang() || 'en';\n    this.months = MONTHS[this.lang];\n    this.weekdays = WEEKDAYS[this.lang];\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field.currentValue.config && changes.field.currentValue.config.value) {\n      this.dateValue = changes.field.currentValue.config.value.toString();\n\n      if (this.dateValue.split('-')) {\n        const date = this.dateValue.split('-');\n        this.selectedDate = new Date(Number(date[0]), Number(date[1]) - 1, Number(date[2]));\n        this.date = new Date(Number(date[0]), Number(date[1]) - 1, Number(date[2]));\n      }\n    }\n\n    this.setCalendar();\n  }\n\n  private setCalendar() {\n    this.currentMonth = this.date.getUTCMonth();\n    this.currentYear = this.date.getUTCFullYear();\n    this.getDaysInCalendar();\n  }\n\n  public changeMonth(next: boolean) {\n    this.date.setMonth(next ? this.date.getUTCMonth() + 1 : this.date.getUTCMonth() - 1);\n    this.currentMonth = this.date.getUTCMonth();\n    this.currentYear = this.date.getUTCFullYear();\n    this.setCalendar();\n\n    setTimeout(() => {\n      this.showDatePickerSelector = true;\n    });\n  }\n\n  public navigateSelectors(next: boolean) {\n    if (this.showSelector === ShowSelector.YEAR) {\n      return this.changeYear(next);\n    } else {\n      return this.changeMonth(next);\n    }\n  }\n\n  public changeYear(next: boolean) {\n    this.yearMultiplier = next ? this.yearMultiplier + 12 : this.yearMultiplier - 12;\n  }\n\n  private getDaysInCalendar() {\n    // days in current month\n    const daysOfCurrentMonth = new Date(\n      this.currentYear, this.currentMonth + 1, 0\n    ).getUTCDate();\n    const currentMonthDays = [];\n\n    for (let i = 0; i < daysOfCurrentMonth; i++) {\n      if (\n        this.selectedDate.getUTCFullYear() === this.date.getUTCFullYear() &&\n        this.selectedDate.getUTCMonth() === this.date.getUTCMonth() &&\n        i + 1 === this.selectedDate.getUTCDate()\n      ) {\n        currentMonthDays.push({\n          day: i + 1,\n          status: 'selected'\n        });\n      } else {\n        currentMonthDays.push({\n          day: i + 1,\n          status: 'available'\n        });\n      }\n    }\n\n    this.daysInCurrentMonth = currentMonthDays;\n\n    // dasy in previous month week\n    this.daysInPreviousMonthWeek = this.getPreviousMonth();\n\n    // days in next month week\n    this.daysInNextMonthWeek = this.getNextMonth();\n  }\n\n  private getPreviousMonth(): Array<number> {\n    const daysOfBeforeMonth = new Date(this.currentYear, this.currentMonth, 0).getUTCDate();\n    const firstDayOfCurrentMonth = new Date(\n      this.currentYear, this.currentMonth, 0\n    ).getDay();\n    const previousWeekDays = [];\n\n    for (let i = 0; i < firstDayOfCurrentMonth; i++) {\n      previousWeekDays.push(daysOfBeforeMonth - i);\n    }\n\n    return previousWeekDays.reverse();\n  }\n\n  private getNextMonth(): Array<number> {\n    const lastDayOfMonth = new Date(\n      this.currentYear, this.currentMonth + 2, 0\n    ).getDay();\n    const nextWeekDays = [];\n\n    for (let i = 0; i < (7 - lastDayOfMonth); i++) {\n      nextWeekDays.push(i + 1);\n    }\n\n    return nextWeekDays;\n  }\n\n  public selectDate(day: number) {\n    this.selectedDate = new Date(this.currentYear, this.currentMonth, day);\n    this.dateValue = this.formatDate(this.selectedDate);\n    this.formGroup.controls[this.field.config.model].patchValue(this.dateValue);\n    this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n    this.getDaysInCalendar();\n    this.toggleDatePickerSelector(false);\n  }\n\n  public selectMonth(month: number) {\n    this.date.setMonth(month);\n    this.currentMonth = this.date.getUTCMonth();\n    this.getDaysInCalendar();\n\n    this.showSelector = ShowSelector.DAY;\n\n    setTimeout(() => {\n      this.showDatePickerSelector = true;\n    });\n  }\n\n  public selectYear(year: number) {\n    this.date.setFullYear(year);\n    this.currentYear = this.date.getUTCFullYear();\n    this.getDaysInCalendar();\n    this.showSelector = ShowSelector.MONTH;\n\n    setTimeout(() => {\n      this.showDatePickerSelector = true;\n    });\n  }\n\n  public toggleSelector(selector: ShowSelector) {\n    this.showSelector = selector;\n\n    setTimeout(() => {\n      this.showDatePickerSelector = true;\n    });\n  }\n\n  public toggleDatePickerSelector(value = !this.showDatePickerSelector) {\n    this.showDatePickerSelector = value;\n  }\n\n  public disableKeys() {\n    return false;\n  }\n\n  private formatDate(date: Date) {\n    const year = date.getUTCFullYear();\n\n    let month = (date.getUTCMonth() + 1).toString();\n    let day = date.getUTCDate().toString();\n\n    if (month.length < 2) {\n      month = `0${month}`;\n    }\n\n    if (day.length < 2) {\n      day = `0${day}`;\n    }\n\n    return [year, month, day].join('-');\n  }\n\n  public resetField() {\n    this.dateValue = null;\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { GDropdownField } from '../../gs-forms.widgets';\nimport { GFieldOptionValues } from '../../gs-forms.models';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.sass']\n})\nexport class GsDropdownComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GDropdownField;\n  @Input() public fieldOption: GFieldOptionValues;\n\n  public dropdownTextValue: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fieldOption && changes.fieldOption.currentValue) {\n      this.fieldOption = changes.fieldOption.currentValue;\n    } else {\n      this.fieldOption = this.field.config.optionValues;\n    }\n\n    if (changes.field && changes.field.currentValue.config && !changes.field.currentValue.config.value) {\n      this.field.config.value = null;\n      this.dropdownTextValue = this.field.config.placeholder || this.field.config.label || this.field.config.model;\n    } else if (changes.field && changes.field.currentValue.config && changes.field.currentValue.config.value) { // if changes has a value\n      this.field.config.value = changes.field.currentValue.config.value;\n      this.dropdownTextValue = this.setDropdownValue();\n    }\n\n    this.formGroup.controls[this.field.config.model].patchValue(this.field.config.value);\n    this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n  }\n\n  public changeValue(text: string, value: string) {\n    this.dropdownTextValue = text;\n    this.field.config.value = value;\n    this.formGroup.controls[this.field.config.model].patchValue(this.field.config.value);\n    this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n  }\n\n  private setDropdownValue(): string {\n    const option = this.fieldOption.find(elem => elem.value === this.field.config.value);\n    return option && option.text ? option.text :\n      this.field.config.placeholder || this.field.config.label || this.field.config.model;\n  }\n\n  public resetField() {\n    this.dropdownTextValue = this.field.config.placeholder || this.field.config.label || this.field.config.model;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GNumberField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-number-input',\n  templateUrl: './number-input.component.html',\n  styleUrls: ['./number-input.component.sass']\n})\nexport class GsNumberInputComponent extends GsGenericFieldComponent {\n  @Input() public field: GNumberField;\n\n  public setPresicion(input: { value: string }): void {\n    const value = input.value;\n    const pointIndex = value.indexOf('.');\n\n    if (pointIndex >= 0) {\n      const precision = this.field.config.precision || 3;\n      const valueLeft = value.substr(0, pointIndex);\n      const valueRight = value.substr(pointIndex, precision);\n      input.value = valueLeft + valueRight;\n    } else {\n      input.value = value;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GPasswordField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-password-input',\n  templateUrl: './password-input.component.html',\n  styleUrls: ['./password-input.component.sass']\n})\nexport class GsPasswordInputComponent extends GsGenericFieldComponent {\n  @Input() public field: GPasswordField;\n\n  public toggle: boolean;\n\n  public toggleInputType() {\n    this.toggle = !this.toggle;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { GPhoneField } from '../../gs-forms.widgets';\nimport { GFieldValidatorType, GFieldCountryCode } from '../../gs-forms.enums';\nimport { LOCATION } from '../../gs-forms.constants';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-phone-input',\n  templateUrl: './phone-input.component.html',\n  styleUrls: ['./phone-input.component.sass']\n})\nexport class GsPhoneInputComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GPhoneField;\n  @Input() private countryGlobal: GFieldCountryCode;\n\n  @ViewChild('inputElement', { static: true }) inputElement: ElementRef;\n\n  public countryCode: string;\n  public country: string;\n  public countryCodeOptions: Array<{ code: string, country: string }>;\n  public showCountryOptions = false;\n  public phoneMask: string;\n  public editCountry: boolean;\n  public value = '';\n  public touched = false;\n  public invalid = false;\n\n  public fieldValidatorType = GFieldValidatorType;\n\n  ngOnChanges(changes: SimpleChanges) {\n    let location = null;\n\n    if (changes.field && changes.field.currentValue.config.country) {\n      location = LOCATION[changes.field.currentValue.config.country];\n\n    } else if (changes.countryGlobal && changes.countryGlobal.currentValue) {\n      location = LOCATION[changes.countryGlobal.currentValue];\n\n    } else {\n      return this.returnBuildingError();\n    }\n\n    this.phoneMask = location.phoneFormat.mask;\n\n    if (changes.field.currentValue.config.value) {\n      let phoneValue: any;\n\n      if (changes.field.currentValue.config.value.startsWith(location.phoneFormat.code, 0)) {\n        phoneValue = changes.field.currentValue.config.value.substring(2);\n      } else {\n        phoneValue = changes.field.currentValue.config.value;\n      }\n\n      if (phoneValue.phone) {\n        this.value = phoneValue.phone.toString();\n        this.country = phoneValue.code || location.phoneFormat.code;\n        this.countryCode = phoneValue.alpha2Code.toLowerCase() || location.country.alpha2Code.toLowerCase();\n      } else {\n        this.value = phoneValue.toString();\n        this.country = location.phoneFormat.code;\n        this.countryCode = location.country.alpha2Code.toLowerCase();\n      }\n\n      this.updatePhoneMask(this.countryCode);\n    } else {\n      this.country = location.phoneFormat.code;\n      this.countryCode = location.country.alpha2Code.toLowerCase();\n      this.updatePhoneMask(this.countryCode);\n    }\n\n    this.editCountry = changes.field.currentValue.config.editCountry;\n    this.countryCodeOptions = this.setCountryCodeOptions();\n\n    this.formatPhone(false, false);\n  }\n\n  public formatPhone(keyup: boolean, touched = true) {\n    this.touched = touched;\n    const inputVal = this.value || '';\n    this.invalid = false;\n\n    // mark input as dirty\n    if (keyup) {\n      this.formGroup.controls[this.field.config.model].markAsDirty();\n    }\n\n    let j = 0;\n    const pattern = this.phoneMask;\n    const sign1 = '0';\n    const sign2 = ' ';\n    const patternLength = pattern.replace(/-/gi, '').length;\n    const oldString = inputVal.replace(/\\D/g, '');\n    const newString = [];\n    const sRegEx = new RegExp(sign2, 'gi');\n    const cleanString = oldString.replace(sRegEx, '');\n\n    if (cleanString.length > patternLength) {\n      return oldString.substring(0, pattern.length);\n    }\n\n    for (let i = 0; i < pattern.length; i++) {\n      if (j === cleanString.length) {\n        break;\n      }\n\n      if (pattern[i] === sign1) {\n        newString[i] = cleanString[j];\n        j++;\n      } else if (pattern[i] === sign2) {\n        newString[i] = sign2;\n      }\n    }\n\n    this.value = newString.join('');\n    if (inputVal === '') {\n      this.formGroup.controls[this.field.config.model].patchValue(null);\n      return;\n    } else {\n      this.invalid = inputVal.length < this.phoneMask.length || inputVal.length > this.phoneMask.length ? true : false;\n      const controlValue = inputVal;\n      this.formGroup.controls[this.field.config.model].patchValue({\n        code: this.country,\n        alpha2Code: this.countryCode,\n        phone: controlValue.replace(/\\s/g, '')\n      });\n      this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n    }\n  }\n\n  public updatePhoneMask(country: string) {\n    const location = LOCATION[country];\n\n    this.phoneMask = location.phoneFormat.mask;\n    this.countryCode = location.country.alpha2Code.toLowerCase();\n    this.country = location.phoneFormat.code;\n\n    this.formatPhone(false);\n    this.showCountryOptions = false;\n  }\n\n  private setCountryCodeOptions() {\n    const countryCodeOptions = [];\n\n    for (const key in LOCATION) {\n      if (LOCATION.hasOwnProperty(key)) {\n        if (!LOCATION[key].disabled) {\n          countryCodeOptions.push({\n            code: LOCATION[key].phoneFormat.code,\n            country: LOCATION[key].country.alpha2Code.toLowerCase()\n          });\n        }\n      }\n    }\n\n    return countryCodeOptions;\n  }\n\n  public toggleCountryOptions(close?: boolean) {\n    this.showCountryOptions = close ? false : !this.showCountryOptions;\n  }\n\n  public errorText(error: string) {\n    return this.formsService.getValidationMessage(error);\n  }\n\n  public returnBuildingError() {\n    return console.error(\n      'GS Form building err: Please provide country for phone field:' + '\\n\\n' +\n      'In your component make sure you are passing a valid country to `GPhoneField`:' + '\\n\\n' +\n      '\\xa0' + 'public formFields: GFormFields = [' + '\\n' +\n      '\\xa0\\xa0' + 'new GPhoneField({' + '\\n' +\n      '\\xa0\\xa0\\xa0' + `model: 'phone',` + '\\n' +\n      '\\xa0\\xa0\\xa0' + `country: GFieldCountryCode.CO` + '\\n' +\n      '\\xa0\\xa0\\xa0' + '// other properties' + '\\n' +\n      '\\xa0\\xa0' + '}),' + '\\n' +\n      '\\xa0' + '];' + '\\n\\n' +\n      'Or In your component make sure you are passing a valid country to `GFormOptions`:' + '\\n\\n' +\n      '\\xa0' + 'public formOptions: GFormOptions = {' + '\\n' +\n      '\\xa0\\xa0' + 'country: GFieldCountryCode.CO' + '\\n' +\n      '\\xa0\\xa0' + '// other properties' + '\\n' +\n      '\\xa0' + '};' + '\\n\\n'\n    );\n  }\n}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { GRadioField } from '../../gs-forms.widgets';\nimport { GFieldOptionValues } from '../../gs-forms.models';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.sass']\n})\nexport class GsRadioButtonComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GRadioField;\n  @Input() public fieldOption: GFieldOptionValues;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fieldOption && changes.fieldOption.currentValue) {\n      this.fieldOption = changes.fieldOption.currentValue;\n    } else {\n      this.fieldOption = this.field.config.optionValues;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GTextField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.sass']\n})\nexport class GsTextInputComponent extends GsGenericFieldComponent {\n  @Input() public field: GTextField;\n}\n","import { Component, Input } from '@angular/core';\nimport { GTextareaField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.sass']\n})\nexport class GsTextareaComponent  extends GsGenericFieldComponent {\n  @Input() public field: GTextareaField;\n}\n","import { Component, Input } from '@angular/core';\nimport { GToggleField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.sass']\n})\nexport class GsToggleComponent extends GsGenericFieldComponent {\n  @Input() public field: GToggleField;\n}\n","import { Component, Input, ViewChild, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { GSeparatedByComma } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-separated-by-comma',\n  templateUrl: './separated-by-comma.component.html',\n  styleUrls: ['./separated-by-comma.component.sass']\n})\nexport class GsSeparatedByCommaComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GSeparatedByComma;\n  @ViewChild('inputElement', { static: true }) inputElement: ElementRef;\n  public fieldOption: Array<string> = [];\n  public value = '';\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field && changes.field.currentValue && changes.field.currentValue.config.value) {\n      this.fieldOption = changes.field.currentValue.config.value.split(',');\n    }\n  }\n\n  public focusInput() {\n    this.inputElement.nativeElement.focus();\n  }\n\n  public removeValue(valIndex: number) {\n    this.fieldOption.splice(valIndex, 1);\n  }\n\n  public disableEnter(event: Event) {\n    event.preventDefault();\n  }\n\n  public removeLastValue(event: any) {\n    if (this.value === '' && event.keyCode === 8) {\n      this.fieldOption.pop();\n      return;\n    }\n  }\n\n  public removeAll() {\n    this.fieldOption = [];\n  }\n\n  public addValue(event: any) {\n    if (this.value === '' || this.value === ',') {\n      return;\n    }\n\n    if (event.keyCode === 188 || event.keyCode === 13) {\n      const value = this.value.replace(/,/g, '');\n\n      if (value === '') {\n        return;\n      }\n\n      this.fieldOption.push(value);\n      const valuesAsString = this.fieldOption.join(',');\n      this.formGroup.controls[this.field.config.model].patchValue(valuesAsString);\n      this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n      this.value = '';\n      return;\n    }\n  }\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\nimport { GFieldFile } from '../../gs-forms.widgets';\n\n@Component({\n  selector: 'gs-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.sass']\n})\nexport class GsFileInputComponent extends GsGenericFieldComponent implements OnInit, OnChanges {\n  @Input() public field: GFieldFile;\n  @Output() private fieldChanged = new EventEmitter<{ file: File; model: string; }>();\n\n  public size: number;\n  public selectedFile: File;\n  public loading = false;\n  private returnFile: boolean;\n\n  private supportedFilesTranslates = {\n    es: 'Archivos soportados',\n    en: 'Supported files',\n    pt: 'Arquivos suportados'\n  };\n  private supportedSizeFilesTranslates = {\n    es: `Tamaño limite`,\n    en: 'Size limit',\n    pt: 'Limite de tamanhos'\n  };\n  public supportedFilesText: string;\n  public supportedSizeFilesText: string;\n\n  private errorTranslates = {\n    es: 'Ocurrio un error al subir el archivo. Por favor intenta de nuevo.',\n    en: 'There was an error uploading the file. Please try again.',\n    pt: 'Ocorreu um erro ao fazer o upload do arquivo. Por favor tente novamente.'\n  };\n  public errorText: string;\n\n  ngOnInit() {\n    this.supportedFilesText = this.supportedFilesTranslates[this.formsService.getLang() || 'en'];\n    this.supportedSizeFilesText = this.supportedSizeFilesTranslates[this.formsService.getLang() || 'en'];\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field.currentValue) {\n      if (this.field.config.value) {\n        this.selectedFile = this.field.config.value;\n        this.formGroup.controls[this.field.config.model].patchValue(this.field.config.value);\n        this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n      }\n\n      if (this.field.config.returnFile) {\n        this.returnFile = true;\n      } else {\n        this.returnFile = false;\n      }\n\n      if (this.field.config.size) {\n\n      }\n    }\n  }\n\n  public onFileChange($event: any): void {\n    this.loading = true;\n\n    const reader = new FileReader();\n    const file: File = $event.target.files[0];\n    const fileName = file.name.split('.').reverse()[1];\n    this.field.config.value = file;\n\n    this.size = file.size;\n\n    if (!this.validFileType(file) || !this.validFileSize()) {\n      this.loading = false;\n    }\n\n    if (file.name.match(/.(jpg|jpeg|png|gif)$/i)) {\n      reader.readAsDataURL(file);\n      reader.onload = (e) => {\n        this.selectedFile = file;\n      };\n    } else {\n      this.selectedFile = file;\n    }\n\n    this.fieldChanged.emit({file, model: this.field.config.model});\n\n    if (this.returnFile) {\n      this.formGroup.controls[this.field.config.model].patchValue(file);\n      this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n      this.loading = false;\n    } else {\n      this.processFile(file);\n    }\n  }\n\n  private processFile(file: any): void {\n    const reader = new FileReader();\n    const url = this.field.config.api.url;\n    const method = this.field.config.api.method;\n    const paramName = this.field.config.api.fileParamName;\n    this.errorText = null;\n\n    reader.addEventListener('load', () => {\n      this.formsService.uploadFileServices(url, method, file, paramName)\n        .subscribe(\n          response => {\n            this.loading = false;\n            this.formGroup.controls[this.field.config.model].patchValue(response);\n            this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n          }, error => {\n            this.loading = false;\n            console.error('Unable to upload the image. Error:', error);\n            this.errorText = this.errorTranslates[this.formsService.getLang() || 'en'];\n            this.formGroup.controls[this.field.config.model].patchValue('unableToUploadFile');\n            this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n            this.formGroup.controls[this.field.config.model].setErrors({ unableToUploadFile: true });\n          });\n    });\n\n    reader.readAsDataURL(file);\n  }\n\n  public returnFileSize(size: number): string {\n    if (size < 1024) {\n      return size + 'bytes';\n    } else if (size >= 1024 && size < 1048576) {\n      return (size / 1024).toFixed(1) + 'KB';\n    } else if (size >= 1048576) {\n      return (size / 1048576).toFixed(1) + 'MB';\n    }\n  }\n\n  public validFileSize(): boolean {\n    return this.field.config.size < this.size;\n  }\n\n  private validFileType(file: File): boolean {\n    return this.field.config.accept.replace(/ /g, '').split(',').includes(`.${file.type.split('/')[1]}`);\n  }\n\n  public resetField() {\n    this.selectedFile = null;\n  }\n\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { GTwoDataInput } from '../../gs-forms.widgets';\nimport { GFieldValidatorType, GFieldValueType } from '../../gs-forms.enums';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n// TODO: add error validators\nenum TwoDataInputErrors {\n  RIGHT_MIN,\n  LEFT_MIN,\n  REQUIRED\n}\n\n@Component({\n  selector: 'gs-two-data-input',\n  templateUrl: './two-data-input.component.html',\n  styleUrls: ['./two-data-input.component.sass']\n})\nexport class GsTwoDataInputComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GTwoDataInput;\n\n  public leftFieldValue: any;\n  public rightFieldValue: any;\n  public leftFieldType: any;\n  public rightFieldType: any;\n  public leftFieldPlaceholder: string;\n  public rightFieldPlaceholder: string;\n  public valueType = GFieldValueType;\n  public fieldValidatorType = GFieldValidatorType;\n  public rightFieldTouched = false;\n  public leftFieldTouched = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field.currentValue) {\n      this.field = changes.field.currentValue;\n\n      if (this.field.config.value) {\n        this.leftFieldValue = this.field.config.value.left || null;\n        this.rightFieldValue = this.field.config.value.right || null;\n      }\n\n      if (this.field.config.options) {\n        this.leftFieldType = this.field.config.options.left ? this.field.config.options.left.type || null : null;\n        this.rightFieldType = this.field.config.options.right ? this.field.config.options.right.type || null : null;\n        this.leftFieldPlaceholder = this.field.config.options.left ? this.field.config.options.left.placeholder || null : null;\n        this.rightFieldPlaceholder = this.field.config.options.right ? this.field.config.options.right.placeholder || null : null;\n      }\n    }\n  }\n\n  public setGrid(): object {\n    if (!this.field.config.grid) {\n      return null;\n    }\n\n    const grid = this.field.config.grid[0] + ' max-content ' + this.field.config.grid[1];\n    return { 'grid-template-columns': grid };\n  }\n\n  public onUpdateValue(right: boolean) {\n    if (!this.rightFieldTouched && right) {\n      this.rightFieldTouched = true;\n    }\n\n    if (!this.leftFieldTouched && !right) {\n      this.leftFieldTouched = true;\n    }\n\n    const updatedValue = {\n      left: this.leftFieldValue,\n      right: this.rightFieldValue\n    };\n\n    if (updatedValue.left && updatedValue.right) {\n      this.formGroup.controls[this.field.config.model].patchValue(updatedValue);\n      this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n    } else {\n      this.formGroup.controls[this.field.config.model].patchValue(null);\n    }\n  }\n\n  public checkMinMaxValidator(input: string, validator: string) {\n    if (this.field.config.options && this.field.config.options[input] && this.field.config.options[input].type) {\n      if (this.field.config.options[input].type === this.valueType.NUMBER) {\n        if (this.field.config.options[input].validators\n          && this.field.config.options[input].validators[this.fieldValidatorType[validator]]) {\n          return this.field.config.options[input].validators[this.fieldValidatorType[validator]];\n        } else if (this.field.config.validators && this.field.config.validators[this.fieldValidatorType[validator]]) {\n          return this.field.config.validators[this.fieldValidatorType[validator]];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  public requiredText(right: boolean) {\n    return right\n      ? this.formsService.getValidationMessage('ERR_REQUIRED_TWO_DATA_RIGHT')\n      : this.formsService.getValidationMessage('ERR_REQUIRED_TWO_DATA_LEFT');\n  }\n\n  public validateRequired(right: boolean) {\n    const input = right ? 'right' : 'left';\n\n    return this.field.config.options[input].validators &&\n      this[`${input}FieldTouched`] &&\n      this.field.config.options[input].validators.required &&\n      !this[`${input}FieldValue`];\n  }\n\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { GDropdownField } from '../../gs-forms.widgets';\nimport { GFieldOptionValues, GFieldExistsOptionValues, GFieldOptionValueExists, GFieldOptionValue } from '../../gs-forms.models';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-multiselect',\n  templateUrl: './multiselect.component.html',\n  styleUrls: ['./multiselect.component.sass']\n})\nexport class GsMultiselectComponent extends GsGenericFieldComponent implements OnChanges {\n  @Input() public field: GDropdownField;\n  @Input() public fieldOption: GFieldOptionValues;\n\n  public options: GFieldExistsOptionValues = [];\n  public noSelection = true;\n  public touched = false;\n  public showMultiselectOptions = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fieldOption && changes.fieldOption.currentValue) {\n      this.fieldOption = changes.fieldOption.currentValue;\n    } else {\n      this.fieldOption = this.field.config.optionValues;\n    }\n\n    this.options = this.fieldOption;\n\n    if (changes.field && changes.field.currentValue.config.value) {\n      const currentValues = changes.field.currentValue.config.value;\n      currentValues.forEach((option: GFieldOptionValue) => {\n        this.toggleOption(option, false);\n      });\n    }\n  }\n\n  public toggleOption(option: GFieldOptionValueExists, touched = true) {\n    const selectedOptions: GFieldOptionValues = [];\n    this.noSelection = true;\n    this.touched = touched;\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.options.length; i++) {\n      if (this.options[i].value === option.value) {\n        this.options[i].exists = !option.exists;\n      }\n\n      if (this.options[i].exists === true) {\n        this.noSelection = false;\n\n        selectedOptions.push({\n          text: this.options[i].text,\n          value: this.options[i].value\n        });\n\n        this.formGroup.controls[this.field.config.model].patchValue(selectedOptions);\n        this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n      }\n    }\n  }\n\n  public toggleMultiselectOptions(value = !this.showMultiselectOptions) {\n    this.showMultiselectOptions = value;\n  }\n\n  public requiredText() {\n    return this.formsService.getValidationMessage('ERR_REQUIRED');\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { GColorPickerField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n@Component({\n  selector: 'gs-color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: ['./color-picker.component.sass']\n})\nexport class GsColorPickerComponent extends GsGenericFieldComponent {\n  @Input() public field: GColorPickerField;\n\n  public setColorValue() {\n    this.formGroup.controls[this.field.config.model].patchValue(\n      this.formGroup.value[this.field.config.model]\n    );\n    this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, OnChanges, SimpleChanges, OnInit } from '@angular/core';\nimport { GMapField } from '../../gs-forms.widgets';\nimport { LOCATION } from '../../gs-forms.constants';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\nconst WINDOW: any = window;\n\n@Component({\n  selector: 'gs-map-field',\n  templateUrl: './map-field.component.html',\n  styleUrls: ['./map-field.component.sass']\n})\nexport class GsMapFieldComponent extends GsGenericFieldComponent implements OnInit, OnChanges {\n  @Input() public field: GMapField;\n  @Input() private googleMapApiKey: string;\n\n  @ViewChild('mapRef', { static: false }) mapElement: ElementRef;\n  @ViewChild('search', { static: false }) search: ElementRef;\n\n  public showMap = false;\n  public showMapModal = false;\n  private latlng = LOCATION.co.lanLng;\n  private map: any;\n  private marker: any;\n  public address: any = [];\n  public addressInput = '';\n\n  ngOnInit(): void {\n    this.showMapModal = this.field.config.showMap;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field.currentValue && changes.field.currentValue.config.value) {\n      const value = changes.field.currentValue.config.value;\n\n      if (value.city && value.country) {\n        this.addressInput = `${value.address}, ${value.city}, ${value.country}`;\n      } else {\n        this.addressInput = value.address;\n      }\n\n      this.selectAddress(this.addressInput, true);\n\n      if (value.lat && value.lng) {\n        this.latlng = {\n          lat: value.lat,\n          lng: value.lng\n        };\n      }\n    } else {\n      this.setLanLngGeolocation();\n    }\n\n    this.valid(false);\n  }\n\n  private setLanLngGeolocation(): void {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latlng = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    }\n  }\n\n  public valid(keyup, valueGoogleSearch?): void {\n    // mark input as dirty\n    if (keyup) {\n      this.formGroup.controls[this.field.config.model].markAsDirty();\n    }\n\n    if (this.addressInput === '') {\n      this.formGroup.controls[this.field.config.model].patchValue(null);\n    } else if (valueGoogleSearch) {\n      this.selectAddress(valueGoogleSearch, false);\n    } else {\n      this.selectAddress(this.addressInput, false);\n    }\n  }\n\n  public loadMap(): void {\n    if (!this.showMapModal) {\n      this.getSearchAddress();\n      return;\n    }\n\n    this.toggleMap();\n\n    if (!this.mapElement.nativeElement.hasChildNodes() && this.showMapModal) {\n      this.map = new WINDOW.google.maps.Map(this.mapElement.nativeElement, {\n        center: this.latlng,\n        zoom: 15,\n        disableDefaultUI: true,\n        mapTypeId: 'roadmap'\n      });\n\n      if (this.latlng) {\n        this.marker = new WINDOW.google.maps.Marker({ position: this.latlng, map: this.map });\n      }\n\n      this.getSearchAddress();\n\n      this.map.addListener('click', (mapsMouseEvent) => {\n        this.latlng = {\n          lat: mapsMouseEvent.latLng.lat(),\n          lng: mapsMouseEvent.latLng.lng()\n        };\n\n        this.addMarker();\n      });\n    }\n  }\n\n  public toggleMap(): void {\n    this.address = [];\n    this.showMap = !this.showMap;\n  }\n\n  private getSearchAddress(): void {\n    const searchBox = new WINDOW.google.maps.places.SearchBox(this.search.nativeElement);\n\n    searchBox.addListener('places_changed', () => {\n      const places = searchBox.getPlaces();\n\n      if (places.length === 0) {\n        return;\n      }\n\n      if (!this.showMapModal) {\n        this.valid(false, places[0].formatted_address);\n        return;\n      }\n\n      const bounds = new WINDOW.google.maps.LatLngBounds();\n\n      places.forEach((place) => {\n        if (!place.geometry) {\n          return;\n        }\n\n        this.latlng = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n\n        this.addMarker();\n\n        if (place.geometry.viewport) {\n          bounds.union(place.geometry.viewport);\n        } else {\n          bounds.extend(place.geometry.location);\n        }\n        this.map.fitBounds(bounds);\n      });\n    });\n  }\n\n  private addMarker(): void {\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n    this.marker = new WINDOW.google.maps.Marker({ position: this.latlng, map: this.map });\n    this.getAddress();\n  }\n\n  private getAddress(): void {\n    this.formsService.getAddress(this.latlng.lat, this.latlng.lng, this.googleMapApiKey)\n      .subscribe(address => this.address = address.results);\n  }\n\n  public selectAddress(address: string, patch: boolean): void {\n    this.addressInput = address;\n    const addressValue = {\n      fullAddress: address,\n      address: address.split(', ')[0] || address,\n      city: address.split(', ')[1] || '',\n      country: address.split(', ')[2] || '',\n      lat: this.latlng.lat || '',\n      lng: this.latlng.lng || ''\n    };\n\n    setTimeout(() => {\n      this.formGroup.controls[this.field.config.model].patchValue(addressValue);\n      this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n    }, 500);\n\n    if (!patch) {\n      this.toggleMap();\n    }\n  }\n\n  public selectAddressText(): string {\n    return this.formsService.getMessage('SELECT_ADDRESS');\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { GDivider } from '../../gs-forms.widgets';\n\n@Component({\n  selector: 'gs-divider',\n  templateUrl: './divider.component.html',\n  styleUrls: ['./divider.component.sass']\n})\nexport class GsDividerComponent {\n  @Input() public divider: GDivider;\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { GButton } from './../../gs-forms.widgets';\nimport { GFieldValueButtonType } from '../../gs-forms.enums';\n\n@Component({\n  selector: 'gs-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.sass']\n})\nexport class GsButtonComponent {\n  @Input() public button: GButton;\n  @Output() hdlAction = new EventEmitter(null);\n\n  public fieldValueButtonType = GFieldValueButtonType;\n\n  public action(action: string) {\n    this.hdlAction.emit({\n      action,\n      id: this.button.config.id\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { GShowData } from '../../gs-forms.widgets';\n\n@Component({\n  selector: 'gs-show-data',\n  templateUrl: './show-data.component.html',\n  styleUrls: ['./show-data.component.sass']\n})\nexport class GsShowDataComponent implements OnInit {\n  @Input() public data: GShowData;\n  public fieldValue = '';\n\n  ngOnInit() {\n    this.fieldValue = this.data.config && this.data.config.value ? this.data.config.value.toString() :\n      this.data.config.placeholder ||\n      this.data.config.label ||\n      this.data.config.model;\n  }\n}\n","import { Component, Input, SimpleChanges, OnChanges, OnInit } from '@angular/core';\nimport { GTimeField } from '../../gs-forms.widgets';\nimport { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';\n\n\n@Component({\n  selector: 'gs-timepicker',\n  templateUrl: './timepicker.component.html',\n  styleUrls: ['./timepicker.component.sass']\n})\nexport class GsTimePickerComponent extends GsGenericFieldComponent implements OnChanges, OnInit {\n  @Input() public field: GTimeField;\n\n  public fieldValueHours: any;\n  public fieldValueMinutes: any;\n  public fieldTouchedHours = false;\n  public fieldTouchedMinutes = false;\n  public validateFormatHours = false;\n  public validateFormatMinutes = false;\n  public validateRequiredHours = false;\n  public validateRequiredMinutes = false;\n\n  public errorsTextArray: {\n    requiredMinutes: string;\n    requiredHours: string;\n    requiredFulltime: string;\n    patternMinutes: string;\n    patternHours: string;\n    patternFulltime: string;\n  };\n\n  ngOnInit(): void {\n    this.errorsTextArray = {\n      requiredMinutes: this.formsService.getValidationMessage('ERR_REQUIRED_MIN'),\n      requiredHours: this.formsService.getValidationMessage('ERR_REQUIRED_HOUR'),\n      requiredFulltime: this.formsService.getValidationMessage('ERR_REQUIRED_FULLTIME'),\n      patternMinutes: this.formsService.getValidationMessage('ERR_PATTERN_MIN'),\n      patternHours: this.formsService.getValidationMessage('ERR_PATTERN_HOUR'),\n      patternFulltime: this.formsService.getValidationMessage('ERR_PATTERN_FULLTIME')\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field.currentValue) {\n      this.field = changes.field.currentValue;\n      if (this.field.config.value) {\n        this.fieldValueHours = this.field.config.value.toString().split(':')[0] || '';\n        this.fieldValueMinutes = this.field.config.value.toString().split(':')[1] || '';\n      }\n    }\n  }\n\n  public onUpdateValue(isMinuteInput: boolean = false) {\n    this.validateFormatHours = false;\n    this.validateFormatMinutes = false;\n    if (!this.fieldTouchedMinutes && isMinuteInput) {\n      this.fieldTouchedMinutes = true;\n    }\n\n    if (!this.fieldTouchedHours && !isMinuteInput) {\n      this.fieldTouchedHours = true;\n    }\n\n    if (this.fieldValueHours && !(this.fieldValueHours > 0 && this.fieldValueHours <= 24) && this.fieldTouchedHours) {\n      this.validateFormatHours = true;\n    }\n\n    if (this.fieldValueMinutes && !(this.fieldValueMinutes >= 0 && this.fieldValueMinutes < 60) && this.fieldTouchedMinutes) {\n      this.validateFormatMinutes = true;\n    }\n\n    const updatedValue = {\n      fullTime: `${this.fieldValueHours}:${this.fieldValueMinutes}`,\n      hour: this.fieldValueHours,\n      min: this.fieldValueMinutes\n    };\n\n    if (updatedValue.hour && updatedValue.min && !this.validateFormatHours && !this.validateFormatMinutes) {\n      this.formGroup.controls[this.field.config.model].patchValue(updatedValue);\n      this.formGroup.controls[this.field.config.model].updateValueAndValidity();\n    } else {\n      this.formGroup.controls[this.field.config.model].patchValue(null);\n    }\n  }\n\n  public validateRequired(isMinuteInput?: boolean) {\n    const input = isMinuteInput ? 'Minutes' : 'Hours';\n    this[`validateRequired${input}`] = this[`fieldTouched${input}`] &&\n      (this[`fieldValue${input}`] === undefined || this[`fieldValue${input}`] === '');\n    return this[`validateRequired${input}`];\n  }\n}\n","import {\n  Component,\n  Input,\n  Inject,\n  HostBinding,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  AfterViewChecked,\n  ViewChildren,\n  QueryList\n} from '@angular/core';\nimport { FormGroup, Validators, ValidationErrors } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { GsFormsService } from './gs-forms.service';\nimport { GFieldSelector, GFieldValidatorType, GFieldValueButtonType } from './gs-forms.enums';\nimport { GFormFields, GStyles, GFormOptions, GField } from './gs-forms.models';\nimport { GsFileInputComponent, GsDatePickerComponent, GsDropdownComponent } from './gs-fields';\n\n@Component({\n  selector: 'gs-form',\n  templateUrl: './gs-form.component.html',\n  styleUrls: ['./gs-form.component.sass']\n})\nexport class GsFormComponent implements AfterViewChecked, OnChanges {\n  private destroyed$ = new Subject();\n  /**\n   * Input: formOptions: GFormOptions\n   *\n   * @description\n   * Set custom configuration to the form\n   *\n   * @example\n   * public formOptions: GFormOptions = {\n   *   country: GFieldCountryCode.CO,\n   *   fieldValues: {\n   *     checkbox: [\n   *       {\n   *         value: true,\n   *         text: 'true'\n   *       }\n   *     ]\n   *   },\n   *   layout: {\n   *     columns: 'repeat(4, 1fr)',\n   *   }\n   * };\n   */\n  @Input() public formOptions: GFormOptions;\n  /**\n   * Input: formFields: GFormFields\n   *\n   * @description\n   * Form fields array\n   *\n   * @example\n   * public formFields: GFormFields = [\n   *   new GTextField({\n   *     model: 'text',\n   *     label: 'TEXT',\n   *     placeholder: 'TEXT_INPUT',\n   *     value: 'Hello text input',\n   *     validators: {\n   *       [GFieldValidatorType.REQUIRED]: true\n   *     },\n   *   }),\n   * ];\n   */\n  @Input() public formFields: GFormFields;\n  /**\n   * Get form group. formGroup: FormGroup `form`\n   */\n  @Output() private form = new EventEmitter<FormGroup>();\n  /**\n   * Get form group changes. formGroup: FormGroup `form`\n   */\n  @Output() private formChanges = new EventEmitter<FormGroup>();\n  /**\n   * Get button event selected\n   */\n  @Output() private customButtonClick = new EventEmitter<string>();\n  /**\n   * Get form group changes. formGroup: FormGroup `form`\n   */\n  @Output() private fieldChanged = new EventEmitter<{ [key: string]: string }>();\n\n  @ViewChildren(GsFileInputComponent) fileInputComponent: QueryList<GsFileInputComponent>;\n  @ViewChildren(GsDatePickerComponent) datePickerComponent: QueryList<GsDatePickerComponent>;\n  @ViewChildren(GsDropdownComponent) dropdownComponent: QueryList<GsDropdownComponent>;\n\n  public formGroup: FormGroup;\n  public fieldSelector = GFieldSelector;\n  public fieldValidatorType = GFieldValidatorType;\n  private customStyles: GStyles;\n  public googleMapApiKey: string;\n\n  constructor(\n    private formsService: GsFormsService,\n    private sanitizer: DomSanitizer,\n    private cdRef: ChangeDetectorRef,\n    @Inject('customStyles') customStyles,\n    @Inject('googleMapApiKey') apikey\n  ) {\n    this.customStyles = customStyles;\n    this.googleMapApiKey = apikey;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes && changes.formFields && changes.formFields.currentValue) {\n      if (this.formGroup) {\n        this.formGroup.reset();\n      }\n\n      const form = this.formsService.buildForm(changes.formFields.currentValue);\n\n      this.formFields = changes.formFields.currentValue;\n      this.formGroup = form;\n\n      this.formGroup.updateValueAndValidity();\n    }\n\n    if (this.formGroup) {\n      this.onFormChanges();\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.cdRef.detectChanges();\n  }\n\n  private onFormChanges(): void {\n    this.formGroup.valueChanges.pipe(takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.formChanges.emit(this.formGroup);\n      });\n\n    const fieldWithDisplay = this.formFields.find((field: GField) => {\n      if (field.config.displayIf && !field.notWidget) {\n        return field;\n      }\n    });\n\n    if (fieldWithDisplay) {\n      this.formGroup.controls[fieldWithDisplay.config.displayIf.model].valueChanges\n        .subscribe(() => {\n          this.formGroup.controls[fieldWithDisplay.config.model].patchValue('');\n          this.formGroup.controls[fieldWithDisplay.config.model].clearValidators();\n          this.formGroup.controls[fieldWithDisplay.config.model].updateValueAndValidity();\n        });\n    }\n  }\n\n  public submit(): void {\n    this.form.emit(this.formGroup);\n  }\n\n  public canSubmit($event): void {\n    if (this.formOptions.onErrorDisableSubmit && this.formGroup.invalid) {\n      $event.preventDefault();\n      return;\n    } else {\n      this.submit();\n    }\n  }\n\n  public isRequired(field: any): boolean {\n    return field.config.validators ? field.config.validators[this.fieldValidatorType.REQUIRED] : false;\n  }\n\n  public validateField(field: any): ValidationErrors {\n    return this.formGroup.controls[field].dirty && this.formGroup.controls[field].errors;\n  }\n\n  public getFieldError(field: any): string {\n    return this.formsService.fieldError(this.formGroup.controls[field]);\n  }\n\n  public sanitizeStyle(value: string) {\n    return this.sanitizer.bypassSecurityTrustStyle(value);\n  }\n\n  public checkCondition(field: GField) {\n    if (!field.config.displayIf) {\n      return true;\n    }\n\n    if (this.formGroup.controls[field.config.displayIf.model].value === field.config.displayIf.hasValue) {\n      const validators = [];\n      const fields = field.config.validators;\n\n      for (const validator in fields) {\n        if (Object.prototype.hasOwnProperty.call(fields, validator) && fields[validator]) {\n          validators.push(this.formsService.buildErrors(validator, fields[validator]));\n        }\n      }\n\n      if (this.formGroup.controls[field.config.model]) {\n        this.formGroup.controls[field.config.model].setValidators(Validators.compose(validators));\n        this.formGroup.controls[field.config.model].updateValueAndValidity();\n      }\n\n      return true;\n    } else if (this.formGroup.controls[field.config.model]) {\n      this.formGroup.controls[field.config.model].clearValidators();\n      this.formGroup.controls[field.config.model].updateValueAndValidity();\n    }\n\n    return false;\n  }\n\n  /**\n   * Custom styles\n   */\n  @HostBinding('attr.style')\n  public get valueAsStyle(): any {\n    let variables = '';\n\n    if (this.customStyles) {\n      // colors\n      if (this.customStyles.color) {\n        if (this.customStyles.color.font) {\n          variables = variables + `--gs-color-font: ${this.customStyles.color.font}!important;`;\n        }\n\n        if (this.customStyles.color.primary) {\n          variables = variables + `--gs-color-primary: ${this.customStyles.color.primary}!important;`;\n        }\n\n        if (this.customStyles.color.secondary) {\n          variables = variables + `--gs-color-secondary: ${this.customStyles.color.secondary}!important;`;\n        }\n\n        if (this.customStyles.color.neutral) {\n          variables = variables + `--gs-color-neutral: ${this.customStyles.color.neutral}!important;`;\n        }\n\n        if (this.customStyles.color.border) {\n          variables = variables + `--gs-color-border: ${this.customStyles.color.border}!important;`;\n        }\n\n        if (this.customStyles.color.white) {\n          variables = variables + `--gs-color-white: ${this.customStyles.color.white}!important;`;\n        }\n      }\n\n      // ui\n      if (this.customStyles.ui) {\n        // font\n        if (this.customStyles.ui.fontSize) {\n          variables = variables + `--gs-font-size: ${this.customStyles.ui.fontSize}!important;`;\n        }\n\n        // padding\n        if (this.customStyles.ui.padding) {\n          variables = variables + `--gs-padding: ${this.customStyles.ui.padding}!important;`;\n        }\n\n        // opacity\n        if (this.customStyles.ui.disabledOpacity) {\n          variables = variables + `--gs-disabled-opacity: ${this.customStyles.ui.disabledOpacity}!important;`;\n        }\n\n        // ui input\n        if (this.customStyles.ui.input) {\n          if (this.customStyles.ui.input.padding) {\n            variables = variables + `--gs-input-padding: ${this.customStyles.ui.input.padding}!important;`;\n          }\n\n          if (this.customStyles.ui.input.color) {\n            variables = variables + `--gs-input-color: ${this.customStyles.ui.input.color}!important;`;\n          }\n\n          if (this.customStyles.ui.input.background) {\n            variables = variables + `--gs-input-background: ${this.customStyles.ui.input.background}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderSize) {\n            variables = variables + `--gs-input-border-size: ${this.customStyles.ui.input.borderSize}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderStyle) {\n            variables = variables + `--gs-input-border-style: ${this.customStyles.ui.input.borderStyle}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderColor) {\n            variables = variables + `--gs-input-border-color: ${this.customStyles.ui.input.borderColor}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderRadius) {\n            variables = variables + `--gs-input-border-radius: ${this.customStyles.ui.input.borderRadius}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderTop) {\n            variables = variables + `--gs-input-border-top: ${this.customStyles.ui.input.borderTop}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderRight) {\n            variables = variables + `--gs-input-border-right: ${this.customStyles.ui.input.borderRight}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderBottom) {\n            variables = variables + `--gs-input-border-bottom: ${this.customStyles.ui.input.borderRadius}!important;`;\n          }\n\n          if (this.customStyles.ui.input.borderLeft) {\n            variables = variables + `--gs-input-border-left: ${this.customStyles.ui.input.borderLeft}!important;`;\n          }\n        }\n\n        // ui primary button\n        if (this.customStyles.ui.primaryButton) {\n          if (this.customStyles.ui.primaryButton.padding) {\n            variables = variables + `--gs-primary-button-padding: ${this.customStyles.ui.primaryButton.padding}!important;`;\n          }\n\n          if (this.customStyles.ui.primaryButton.color) {\n            variables = variables + `--gs-primary-button-color: ${this.customStyles.ui.primaryButton.color}!important;`;\n          }\n\n          if (this.customStyles.ui.primaryButton.background) {\n            variables = variables + `--gs-primary-button-background: ${this.customStyles.ui.primaryButton.background}!important;`;\n          }\n\n          if (this.customStyles.ui.primaryButton.borderColor) {\n            variables = variables + `--gs-primary-button-border-color: ${this.customStyles.ui.primaryButton.borderColor}!important;`;\n          }\n\n          if (this.customStyles.ui.primaryButton.borderRadius) {\n            variables = variables + `--gs-primary-button-border-radius: ${this.customStyles.ui.primaryButton.borderRadius}!important;`;\n          }\n        }\n\n        // ui secondary button\n        if (this.customStyles.ui.secondaryButton) {\n          if (this.customStyles.ui.secondaryButton.padding) {\n            variables = variables + `--gs-secondary-button-padding: ${this.customStyles.ui.secondaryButton.padding}!important;`;\n          }\n\n          if (this.customStyles.ui.secondaryButton.color) {\n            variables = variables + `--gs-secondary-button-color: ${this.customStyles.ui.secondaryButton.color}!important;`;\n          }\n\n          if (this.customStyles.ui.secondaryButton.background) {\n            variables = variables + `--gs-secondary-button-background: ${this.customStyles.ui.secondaryButton.background}!important;`;\n          }\n\n          if (this.customStyles.ui.secondaryButton.borderColor) {\n            variables = variables + `--gs-secondary-button-border-color: ${this.customStyles.ui.secondaryButton.borderColor}!important;`;\n          }\n\n          if (this.customStyles.ui.secondaryButton.borderRadius) {\n            variables = variables + `--gs-secondary-button-border-radius: ${this.customStyles.ui.secondaryButton.borderRadius}!important;`;\n          }\n        }\n      }\n\n      // layout\n      if (this.formOptions && this.formOptions.layout) {\n\n        if (this.formOptions.layout.columns) {\n          if (typeof this.formOptions.layout.columns === 'number') {\n            // if typeof number\n            variables = variables + `--gs-layout-columns-quantity: repeat(${this.formOptions.layout.columns}, 1fr)!important;`;\n          } else {\n            // if typeof string\n            variables = variables + `--gs-layout-columns-quantity: ${this.formOptions.layout.columns}!important;`;\n          }\n        }\n\n        if (this.formOptions.layout.innerPadding) {\n          variables = variables + `--gs-layout-padding: ${this.formOptions.layout.innerPadding}!important;`;\n        }\n      }\n\n      return this.sanitizer.bypassSecurityTrustStyle(\n        variables\n      );\n    }\n  }\n\n  public formActions(action: string, id?: string) {\n    switch (action) {\n      case GFieldValueButtonType.SUBMIT:\n        this.submit();\n        break;\n      case GFieldValueButtonType.RESET:\n        if (this.formGroup) {\n          this.formGroup.reset();\n\n          if (this.fileInputComponent !== undefined) {\n            this.fileInputComponent.forEach(el => el.resetField());\n          }\n\n          if (this.datePickerComponent !== undefined) {\n            this.datePickerComponent.forEach(el => el.resetField());\n          }\n\n          if (this.dropdownComponent !== undefined) {\n            this.dropdownComponent.forEach(el => el.resetField());\n          }\n        }\n        break;\n      case GFieldValueButtonType.CUSTOM:\n        this.customButtonClick.emit(id);\n        break;\n    }\n  }\n\n  public onFieldChanged(changes: { [key: string]: string }): void {\n    this.fieldChanged.emit(changes);\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n// https://github.com/changhuixu/ngx-digit-only/blob/master/projects/uiowa/digit-only/src/lib/digit-only.directive.ts\n\n@Directive({\n  selector: '[gsDigitOnly]'\n})\nexport class DigitOnlyDirective {\n  private decimalCounter = 0;\n  private navigationKeys = [\n    'Backspace',\n    'Delete',\n    'Tab',\n    'Escape',\n    'Enter',\n    'Home',\n    'End',\n    'ArrowLeft',\n    'ArrowRight',\n    'Clear',\n    'Copy',\n    'Paste'\n  ];\n  @Input() decimal ? = false;\n  inputElement: HTMLInputElement;\n\n  constructor(public el: ElementRef) {\n    this.inputElement = el.nativeElement;\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent) {\n    if (\n      this.navigationKeys.indexOf(e.key) > -1 || // Allow: navigation keys: backspace, delete, arrows etc.\n      (e.key === 'a' && e.ctrlKey === true) || // Allow: Ctrl+A\n      (e.key === 'c' && e.ctrlKey === true) || // Allow: Ctrl+C\n      (e.key === 'v' && e.ctrlKey === true) || // Allow: Ctrl+V\n      (e.key === 'x' && e.ctrlKey === true) || // Allow: Ctrl+X\n      (e.key === 'a' && e.metaKey === true) || // Allow: Cmd+A (Mac)\n      (e.key === 'c' && e.metaKey === true) || // Allow: Cmd+C (Mac)\n      (e.key === 'v' && e.metaKey === true) || // Allow: Cmd+V (Mac)\n      (e.key === 'x' && e.metaKey === true) || // Allow: Cmd+X (Mac)\n      (this.decimal && e.key === '.' && this.decimalCounter < 1) // Allow: only one decimal point\n    ) {\n      // let it happen, don't do anything\n      return;\n    }\n    // Ensure that it is a number and stop the keypress\n    if (e.key === ' ' || isNaN(Number(e.key))) {\n      e.preventDefault();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyUp(e: KeyboardEvent) {\n    if (!this.decimal) {\n      return;\n    } else {\n      this.decimalCounter = this.el.nativeElement.value.split('.').length - 1;\n    }\n  }\n\n  @HostListener('paste', ['$event'])\n  onPaste(event: ClipboardEvent) {\n    const pastedInput: string = event.clipboardData.getData('text/plain');\n    let pasted = false;\n    if (!this.decimal) {\n      pasted = document.execCommand(\n        'insertText',\n        false,\n        pastedInput.replace(/[^0-9]/g, '')\n      );\n    } else if (this.isValidDecimal(pastedInput)) {\n      pasted = document.execCommand(\n        'insertText',\n        false,\n        pastedInput.replace(/[^0-9.]/g, '')\n      );\n    }\n    if (pasted) {\n      event.preventDefault();\n    } else {\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(pastedInput);\n        document.execCommand('paste');\n      }\n    }\n  }\n\n  @HostListener('drop', ['$event'])\n  onDrop(event: DragEvent) {\n    const textData = event.dataTransfer.getData('text');\n    this.inputElement.focus();\n\n    let pasted = false;\n    if (!this.decimal) {\n      pasted = document.execCommand(\n        'insertText',\n        false,\n        textData.replace(/[^0-9]/g, '')\n      );\n    } else if (this.isValidDecimal(textData)) {\n      pasted = document.execCommand(\n        'insertText',\n        false,\n        textData.replace(/[^0-9.]/g, '')\n      );\n    }\n    if (pasted) {\n      event.preventDefault();\n    } else {\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(textData);\n        document.execCommand('paste');\n      }\n    }\n  }\n\n  isValidDecimal(str: string): boolean {\n    return str.split('.').length <= 2;\n  }\n}\n","import { Directive, ElementRef, HostListener, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[gsClickOutside]'\n})\nexport class ClickOutsideDirective {\n  @Output('gsClickOutside') clickOutside: EventEmitter<any> = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) { }\n\n  @HostListener('document:click', ['$event.target'])\n  onMouseEnter(targetElement) {\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.clickOutside.emit(null);\n    }\n  }\n}\n","import { GsButtonComponent } from './gs-fields/button/button.component';\nimport { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { GStyles } from './gs-forms.models';\nimport { GsGenericFieldComponent } from './gs-fields/_generic-field/_generic-field.component';\nimport { DigitOnlyDirective } from './gs-directives/digit-only/digit-only.directive';\nimport { ClickOutsideDirective } from './gs-directives/click-outside/click-outside.directive';\nimport { GsTextInputComponent } from './gs-fields/text-input/text-input.component';\nimport { GsTextareaComponent } from './gs-fields/textarea/textarea.component';\nimport { GsPasswordInputComponent } from './gs-fields/password-input/password-input.component';\nimport { GsNumberInputComponent } from './gs-fields/number-input/number-input.component';\nimport { GsToggleComponent } from './gs-fields/toggle/toggle.component';\nimport { GsCheckboxComponent } from './gs-fields/checkbox/checkbox.component';\nimport { GsRadioButtonComponent } from './gs-fields/radio-button/radio-button.component';\nimport { GsDropdownComponent } from './gs-fields/dropdown/dropdown.component';\nimport { GsCurrencyInputComponent } from './gs-fields/currency-input/currency-input.component';\nimport { GsPhoneInputComponent } from './gs-fields/phone-input/phone-input.component';\nimport { GsDatePickerComponent } from './gs-fields/datepicker/datepicker.component';\nimport { GsSeparatedByCommaComponent } from './gs-fields/separated-by-comma/separated-by-comma.component';\nimport { GsFileInputComponent } from './gs-fields/file-input/file-input.component';\nimport { GsDividerComponent } from './gs-fields/divider/divider.component';\nimport { GsTwoDataInputComponent } from './gs-fields/two-data-input/two-data-input.component';\nimport { GsMultiselectComponent } from './gs-fields/multiselect/multiselect.component';\nimport { GsMapFieldComponent } from './gs-fields/map-field/map-field.component';\nimport { GsColorPickerComponent } from './gs-fields/color-picker/color-picker.component';\nimport { GsShowDataComponent } from './gs-fields/show-data/show-data.component';\nimport { GsTimePickerComponent } from './gs-fields';\nimport { GsFormComponent } from './gs-form.component';\nimport { GsFormsService } from './gs-forms.service';\n\nconst directive = [\n  DigitOnlyDirective,\n  ClickOutsideDirective,\n];\n\nconst widgets = [\n  GsGenericFieldComponent,\n  GsTextInputComponent,\n  GsTextareaComponent,\n  GsPasswordInputComponent,\n  GsNumberInputComponent,\n  GsToggleComponent,\n  GsCheckboxComponent,\n  GsRadioButtonComponent,\n  GsDropdownComponent,\n  GsCurrencyInputComponent,\n  GsPhoneInputComponent,\n  GsDatePickerComponent,\n  GsSeparatedByCommaComponent,\n  GsFileInputComponent,\n  GsDividerComponent,\n  GsTwoDataInputComponent,\n  GsMultiselectComponent,\n  GsColorPickerComponent,\n  GsMapFieldComponent,\n  GsTimePickerComponent,\n  GsButtonComponent,\n  GsShowDataComponent,\n  GsFormComponent\n];\n\n@NgModule({\n  declarations: [\n    ...directive,\n    ...widgets\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    GsFormsService\n  ],\n  exports: [\n    ...directive,\n    ...widgets\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class GsFormsModule {\n  public static forRoot(styles?: GStyles, googleMapApiKey?: string): ModuleWithProviders {\n    if (googleMapApiKey && !document.getElementById('google-map-script')) {\n      const googleScript = document.createElement('script');\n      googleScript.defer = true;\n      googleScript.async = true;\n      googleScript.id = 'google-map-script';\n      googleScript.type = 'text/javascript';\n      googleScript.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapApiKey}&libraries=places`;\n      document.body.appendChild(googleScript);\n    }\n\n    return {\n      ngModule: GsFormsModule,\n      providers: [\n        {\n          provide: 'customStyles',\n          useValue: styles\n        },\n        {\n          provide: 'googleMapApiKey',\n          useValue: googleMapApiKey\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of gs-forms\n */\n\nexport * from './lib/gs-forms.widgets';\nexport * from './lib/gs-forms.enums';\nexport * from './lib/gs-forms.models';\nexport * from './lib/gs-forms.constants';\nexport * from './lib/gs-fields';\nexport { GsFormsService } from './lib/gs-forms.service';\nexport { GsFormComponent } from './lib/gs-form.component';\nexport { GsGenericFieldComponent } from './lib/gs-fields/_generic-field/_generic-field.component';\nexport * from './lib/gs-forms.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ClickOutsideDirective as ɵb} from './lib/gs-directives/click-outside/click-outside.directive';\nexport {DigitOnlyDirective as ɵa} from './lib/gs-directives/digit-only/digit-only.directive';\nexport {GsButtonComponent as ɵu} from './lib/gs-fields/button/button.component';\nexport {GsCheckboxComponent as ɵh} from './lib/gs-fields/checkbox/checkbox.component';\nexport {GsColorPickerComponent as ɵs} from './lib/gs-fields/color-picker/color-picker.component';\nexport {GsCurrencyInputComponent as ɵk} from './lib/gs-fields/currency-input/currency-input.component';\nexport {GsDatePickerComponent as ɵm} from './lib/gs-fields/datepicker/datepicker.component';\nexport {GsDividerComponent as ɵp} from './lib/gs-fields/divider/divider.component';\nexport {GsDropdownComponent as ɵj} from './lib/gs-fields/dropdown/dropdown.component';\nexport {GsFileInputComponent as ɵo} from './lib/gs-fields/file-input/file-input.component';\nexport {GsMapFieldComponent as ɵt} from './lib/gs-fields/map-field/map-field.component';\nexport {GsMultiselectComponent as ɵr} from './lib/gs-fields/multiselect/multiselect.component';\nexport {GsNumberInputComponent as ɵf} from './lib/gs-fields/number-input/number-input.component';\nexport {GsPasswordInputComponent as ɵe} from './lib/gs-fields/password-input/password-input.component';\nexport {GsPhoneInputComponent as ɵl} from './lib/gs-fields/phone-input/phone-input.component';\nexport {GsRadioButtonComponent as ɵi} from './lib/gs-fields/radio-button/radio-button.component';\nexport {GsSeparatedByCommaComponent as ɵn} from './lib/gs-fields/separated-by-comma/separated-by-comma.component';\nexport {GsShowDataComponent as ɵv} from './lib/gs-fields/show-data/show-data.component';\nexport {GsTextInputComponent as ɵc} from './lib/gs-fields/text-input/text-input.component';\nexport {GsTextareaComponent as ɵd} from './lib/gs-fields/textarea/textarea.component';\nexport {GsToggleComponent as ɵg} from './lib/gs-fields/toggle/toggle.component';\nexport {GsTwoDataInputComponent as ɵq} from './lib/gs-fields/two-data-input/two-data-input.component';"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}