import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { GFieldValidatorType } from '../../gs-forms.enums';
import { LOCATION } from '../../gs-forms.constants';
import { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';
var GsCurrencyInputComponent = /** @class */ (function (_super) {
    tslib_1.__extends(GsCurrencyInputComponent, _super);
    function GsCurrencyInputComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = '';
        _this.fieldValidatorType = GFieldValidatorType;
        return _this;
    }
    GsCurrencyInputComponent.prototype.ngOnChanges = function (changes) {
        var location = null;
        if (changes.field && changes.field.currentValue.config.country) {
            location = LOCATION[changes.field.currentValue.config.country];
        }
        else if (changes.countryGlobal && changes.countryGlobal.currentValue) {
            location = LOCATION[changes.countryGlobal.currentValue];
        }
        else {
            return this.returnBuildingError();
        }
        this.prefix = location.currencyFormat.symbol;
        this.suffix = location.currencyFormat.code;
        this.thousandsSeparator = location.currencyFormat.thousands;
        this.decimalSeparator = location.currencyFormat.decimal;
        this.precision = location.currencyFormat.precision;
        if (changes.field.currentValue.config.value) {
            this.value = changes.field.currentValue.config.value.toString().replace('.', '');
        }
        this.formatCurrency(false);
    };
    GsCurrencyInputComponent.prototype.formatCurrency = function (keyup) {
        var _this = this;
        var inputVal = this.value || '0';
        // mark input as dirty
        if (keyup) {
            this.formGroup.controls[this.field.config.model].markAsDirty();
        }
        // remove any leading zeros
        if (inputVal.substring(0, 1) === '0') {
            inputVal = inputVal.replace(/^[0|\D]*/, '');
        }
        // format decimal if applies
        if (!inputVal || inputVal.length === 1 && inputVal.substring(0, 1) === '0') {
            var emptyDecimals = '0';
            if (this.precision > 0) {
                for (var index = 0; index < this.precision; index++) {
                    emptyDecimals = emptyDecimals + '0';
                }
            }
            inputVal = emptyDecimals;
        }
        var cleanValue = inputVal.replace(/\D/g, '');
        var decimals = null;
        var thousands = null;
        // format number as currency
        if (this.precision > 0) {
            decimals = cleanValue.slice(this.precision - this.precision * 2);
            if (decimals.length < this.precision) {
                for (var index = 0; index < this.precision - Number(decimals); index++) {
                    decimals = '0' + decimals;
                }
                thousands = '0';
            }
            else {
                thousands = cleanValue.substring(0, cleanValue.length - this.precision) || '0';
            }
        }
        else {
            thousands = cleanValue;
        }
        var formattedThousands = thousands.replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, this.thousandsSeparator);
        var controlValue = "" + thousands + (decimals ? '.' + decimals : '');
        this.value = formattedThousands + (decimals ? this.decimalSeparator + decimals : '');
        setTimeout(function () {
            _this.formGroup.controls[_this.field.config.model].patchValue(Number(controlValue));
            _this.formGroup.controls[_this.field.config.model].updateValueAndValidity();
        });
    };
    GsCurrencyInputComponent.prototype.returnBuildingError = function () {
        return console.error('GS Form building err: Please provide country for currency field:' + '\n\n' +
            'In your component make sure you are passing a valid country to `GCurrencyField`:' + '\n\n' +
            '\xa0' + 'public formFields: GFormFields = [' + '\n' +
            '\xa0\xa0' + 'new GCurrencyField({' + '\n' +
            '\xa0\xa0\xa0' + "model: 'currency'," + '\n' +
            '\xa0\xa0\xa0' + "country: GFieldCountryCode.CO" + '\n' +
            '\xa0\xa0\xa0' + '// other properties' + '\n' +
            '\xa0\xa0' + '}),' + '\n' +
            '\xa0' + '];' + '\n\n' +
            'Or In your component make sure you are passing a valid country to `GFormOptions`:' + '\n\n' +
            '\xa0' + 'public formOptions: GFormOptions = {' + '\n' +
            '\xa0\xa0' + 'country: GFieldCountryCode.CO' + '\n' +
            '\xa0\xa0' + '// other properties' + '\n' +
            '\xa0' + '};' + '\n\n');
    };
    tslib_1.__decorate([
        Input()
    ], GsCurrencyInputComponent.prototype, "field", void 0);
    tslib_1.__decorate([
        Input()
    ], GsCurrencyInputComponent.prototype, "countryGlobal", void 0);
    GsCurrencyInputComponent = tslib_1.__decorate([
        Component({
            selector: 'gs-currency-input',
            template: "<ng-container>\n  <div\n    class=\"gs-field\" \n    [class.gs-field-has-error]=\"validateField()\">\n    \n    <label\n      class=\"gs-field-box\"\n      [class.gs-form-field-box-full]=\"field.config.label\">\n  \n      <span\n        class=\"gs-field-label\"\n        *ngIf=\"field.config.label\">\n        {{ field.config.label | translate }}\n      </span>\n  \n      <div class=\"gs-field-currency\">\n        <span class=\"gs-field-currency-symbol\">{{ prefix }}</span>\n        <input\n          #inputElement\n          class=\"gs-field-input gs-field-currency-input\"\n          type=\"text\"\n          [autocomplete]=\"field.config.autocomplete || 'off'\"\n          [id]=\"field.config.model\"\n          [placeholder]=\"field.config.placeholder || field.config.label || field.config.model | translate\"\n          [(ngModel)]=\"value\"\n          (keyup)=\"formatCurrency(true)\" />\n        <span class=\"gs-field-currency-code\">{{ suffix }}</span>\n      </div>\n    </label>\n\n    <span class=\"gs-field-error\" *ngIf=\"validateField()\">\n      {{ getFieldError(field.config.model) | translate }}\n    </span>\n  </div>\n</ng-container>\n",
            styles: ["*{color:var(--gs-color-font,#706967);outline:0;box-sizing:border-box}input,option,select,textarea{border:none;outline:0;display:block;box-shadow:none;box-sizing:border-box}input::-webkit-input-placeholder,option::-webkit-input-placeholder,select::-webkit-input-placeholder,textarea::-webkit-input-placeholder{opacity:.5}input::-moz-placeholder,option::-moz-placeholder,select::-moz-placeholder,textarea::-moz-placeholder{opacity:.5}input::-ms-input-placeholder,option::-ms-input-placeholder,select::-ms-input-placeholder,textarea::-ms-input-placeholder{opacity:.5}input::placeholder,option::placeholder,select::placeholder,textarea::placeholder{opacity:.5}.disabled{opacity:var(--gs-disabled-opacity,.7);cursor:default;pointer-events:none}.button{-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out;cursor:pointer;border:none;text-align:center;font-weight:700;outline:0;padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-color,#fff);background:var(--gs-primary-button-background,#b8b4b4);border-radius:var(--gs-primary-button-border-radius,1rem)}.button:hover{opacity:.8}.button.button-primary{padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-color,#fff);background:var(--gs-primary-button-background,#ff2426);border:none;border-radius:var(--gs-primary-button-border-radius,1rem)}.button.button-secondary{padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-background,#ff2426);background:0 0;border:2px solid var(--gs-primary-button-background,#ff2426);border-radius:var(--gs-primary-button-border-radius,1rem)}*,input,select,textarea{font-size:var(--gs-font-size,.9rem);font-family:inherit;background-color:transparent}.gs-no-select{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.gs-field{position:relative}.gs-field.gs-field-has-error .gs-field-box{border:2px solid #ff2426}.gs-field.gs-field-has-error .gs-field-error{display:block}.gs-field-box{border:2px solid var(--gs-input-border-color,none);display:-ms-grid;display:grid;background-color:var(--gs-input-background,#fff);padding:var(--gs-input-padding,12px);border-radius:var(--gs-input-border-radius,1rem);height:51px}.gs-field-box .gs-field-label{color:#706967;font-size:.6rem;font-weight:600;letter-spacing:.1em;line-height:1;text-transform:uppercase;-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1;color:var(--gs-input-color,#332927);opacity:.5}.gs-field-box .gs-field-input{outline:0;border:none;width:100%;margin:0;font-weight:600;font-size:1rem;line-height:1;padding:0;-ms-grid-column:1;grid-column:1;-ms-grid-row:2;grid-row:2}.gs-field-box .gs-field-input :focus,.gs-field-box .gs-field-input:focus{outline:0}.gs-field-box .gs-field-input::-webkit-input-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::-moz-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::-ms-input-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-form-field_symbol{-ms-grid-column:2;grid-column:2;-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/3;-ms-grid-row-align:center;align-self:center;text-align:right}.gs-field-box.gs-field-box-full .gs-field-input{padding:.1rem 0 0}.gs-field-box.gs-input-check-box,.gs-field-box.gs-input-switch-box{-ms-grid-columns:1fr auto;grid-template-columns:1fr auto}.gs-field-box.gs-input-check-box .gs-field-label,.gs-field-box.gs-input-switch-box .gs-field-label{-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1;-ms-grid-row-align:center;align-self:center}.gs-field-box.gs-input-check-box .gs-input-check,.gs-field-box.gs-input-check-box .gs-input-switch,.gs-field-box.gs-input-switch-box .gs-input-check,.gs-field-box.gs-input-switch-box .gs-input-switch{-ms-grid-column:2;grid-column:2;-ms-grid-row:1;grid-row:1;-ms-grid-row-align:center;align-self:center}.gs-field-box.gs-field-box-icon{display:-ms-grid;display:grid;-ms-grid-columns:1fr 20px;grid-template-columns:1fr 20px}.gs-field-box.gs-field-box-icon .gs-field-icon{cursor:pointer;width:20px;fill:#706967;-ms-grid-column:2;grid-column:2;-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/3;-ms-grid-row-align:center;align-self:center}.gs-field-error,.gs-field-hint{font-size:.8rem;padding:.6rem 1rem;display:inline-block;margin-right:1rem}.gs-field-error{display:none;color:#ff2426}.gs-field-currency{display:-ms-grid;display:grid;-ms-grid-columns:-webkit-min-content auto -webkit-min-content;-ms-grid-columns:min-content auto min-content;grid-template-columns:-webkit-min-content auto -webkit-min-content;grid-template-columns:min-content auto min-content}.gs-field-currency .gs-field-currency-input{background:0 0;border:none;outline:0;text-align:right;padding-right:.5rem;grid-row:unset;grid-column:unset}.gs-field-currency .gs-field-currency-code,.gs-field-currency .gs-field-currency-symbol{-ms-grid-row-align:center;align-self:center}"]
        })
    ], GsCurrencyInputComponent);
    return GsCurrencyInputComponent;
}(GsGenericFieldComponent));
export { GsCurrencyInputComponent };
//# sourceMappingURL=data:application/json;base64,