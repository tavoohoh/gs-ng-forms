import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { GFieldValidatorType, GFieldValueType } from '../../gs-forms.enums';
import { GsGenericFieldComponent } from '../_generic-field/_generic-field.component';
// TODO: add error validators
var TwoDataInputErrors;
(function (TwoDataInputErrors) {
    TwoDataInputErrors[TwoDataInputErrors["RIGHT_MIN"] = 0] = "RIGHT_MIN";
    TwoDataInputErrors[TwoDataInputErrors["LEFT_MIN"] = 1] = "LEFT_MIN";
    TwoDataInputErrors[TwoDataInputErrors["REQUIRED"] = 2] = "REQUIRED";
})(TwoDataInputErrors || (TwoDataInputErrors = {}));
var GsTwoDataInputComponent = /** @class */ (function (_super) {
    tslib_1.__extends(GsTwoDataInputComponent, _super);
    function GsTwoDataInputComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.valueType = GFieldValueType;
        _this.fieldValidatorType = GFieldValidatorType;
        _this.rightFieldTouched = false;
        _this.leftFieldTouched = false;
        return _this;
    }
    GsTwoDataInputComponent.prototype.ngOnChanges = function (changes) {
        if (changes.field.currentValue) {
            this.field = changes.field.currentValue;
            if (this.field.config.value) {
                this.leftFieldValue = this.field.config.value.left || null;
                this.rightFieldValue = this.field.config.value.right || null;
            }
            if (this.field.config.options) {
                this.leftFieldType = this.field.config.options.left ? this.field.config.options.left.type || null : null;
                this.rightFieldType = this.field.config.options.right ? this.field.config.options.right.type || null : null;
                this.leftFieldPlaceholder = this.field.config.options.left ? this.field.config.options.left.placeholder || null : null;
                this.rightFieldPlaceholder = this.field.config.options.right ? this.field.config.options.right.placeholder || null : null;
            }
        }
    };
    GsTwoDataInputComponent.prototype.setGrid = function () {
        if (!this.field.config.grid) {
            return null;
        }
        var grid = this.field.config.grid[0] + ' max-content ' + this.field.config.grid[1];
        return { 'grid-template-columns': grid };
    };
    GsTwoDataInputComponent.prototype.onUpdateValue = function (right) {
        if (!this.rightFieldTouched && right) {
            this.rightFieldTouched = true;
        }
        if (!this.leftFieldTouched && !right) {
            this.leftFieldTouched = true;
        }
        var updatedValue = {
            left: this.leftFieldValue,
            right: this.rightFieldValue
        };
        if (updatedValue.left && updatedValue.right) {
            this.formGroup.controls[this.field.config.model].patchValue(updatedValue);
            this.formGroup.controls[this.field.config.model].updateValueAndValidity();
        }
        else {
            this.formGroup.controls[this.field.config.model].patchValue(null);
        }
    };
    GsTwoDataInputComponent.prototype.checkMinMaxValidator = function (input, validator) {
        if (this.field.config.options && this.field.config.options[input] && this.field.config.options[input].type) {
            if (this.field.config.options[input].type === this.valueType.NUMBER) {
                if (this.field.config.options[input].validators
                    && this.field.config.options[input].validators[this.fieldValidatorType[validator]]) {
                    return this.field.config.options[input].validators[this.fieldValidatorType[validator]];
                }
                else if (this.field.config.validators && this.field.config.validators[this.fieldValidatorType[validator]]) {
                    return this.field.config.validators[this.fieldValidatorType[validator]];
                }
            }
        }
        return null;
    };
    GsTwoDataInputComponent.prototype.requiredText = function (right) {
        return right
            ? this.formsService.getValidationMessage('ERR_REQUIRED_TWO_DATA_RIGHT')
            : this.formsService.getValidationMessage('ERR_REQUIRED_TWO_DATA_LEFT');
    };
    GsTwoDataInputComponent.prototype.validateRequired = function (right) {
        var input = right ? 'right' : 'left';
        return this.field.config.options[input].validators &&
            this[input + "FieldTouched"] &&
            this.field.config.options[input].validators.required &&
            !this[input + "FieldValue"];
    };
    tslib_1.__decorate([
        Input()
    ], GsTwoDataInputComponent.prototype, "field", void 0);
    GsTwoDataInputComponent = tslib_1.__decorate([
        Component({
            selector: 'gs-two-data-input',
            template: "<div class=\"gs-field\" \n  [class.gs-field-has-error]=\"validateField() || validateRequired(false) || validateRequired(true)\">\n  \n  <label\n    class=\"gs-field-box\"\n    [class.gs-form-field-box-full]=\"field.config.label\">\n\n    <span\n      class=\"gs-field-label\"\n      *ngIf=\"field.config.label\">\n      {{ field.config.label | translate }}\n    </span>\n\n    <div class=\"gs-field-input gs-field-input-two-data\" [ngStyle]=\"setGrid()\">\n      <!-- left input -->\n      <input \n        class=\"gs-field-input gs-field-input-two-data-left\" \n        [placeholder]=\"leftFieldPlaceholder || '' | translate\"\n        [type]=\"leftFieldType === valueType.NUMBER ? 'number' : 'string'\"\n        [pattern]=\"leftFieldType === valueType.NUMBER ? '[0-9]*' : null\"\n        [inputmode]=\"leftFieldType === valueType.NUMBER ? 'numeric' : null\" \n        [decimal]=\"false\"\n        [gsDigitOnly]=\"leftFieldType === valueType.NUMBER\" \n        [autocomplete]=\"field.config.autocomplete || 'off'\"\n        [(ngModel)]=\"leftFieldValue\" \n        [min]=\"checkMinMaxValidator('left', 'MIN')\" \n        [max]=\"checkMinMaxValidator('left', 'MAX')\"\n        (keyup)=\"onUpdateValue(false)\"/>\n    \n      <!-- divider -->\n      <span class=\"gs-field-input-two-data-divider\">\n        {{ field.config.divider || '-' }}\n      </span>\n    \n      <!-- right input -->\n      <input \n        class=\"gs-field-input gs-field-input-two-data-right\" \n        [placeholder]=\"rightFieldPlaceholder || '' | translate\"\n        [type]=\"rightFieldType === valueType.NUMBER ? 'number' : 'string'\"\n        [pattern]=\"rightFieldType === valueType.NUMBER ? '[0-9]*' : null\"\n        [inputmode]=\"rightFieldType === valueType.NUMBER ? 'numeric' : null\" \n        [decimal]=\"false\"\n        [gsDigitOnly]=\"rightFieldType === valueType.NUMBER\" \n        [autocomplete]=\"field.config.autocomplete || 'off'\"\n        [min]=\"checkMinMaxValidator('right', 'MIN')\" \n        [max]=\"checkMinMaxValidator('right', 'MAX')\"\n        [(ngModel)]=\"rightFieldValue\"\n        (keyup)=\"onUpdateValue(true)\"/>\n    </div>\n  </label>\n\n  <span class=\"gs-field-error\" *ngIf=\"validateField()\">\n    {{ getFieldError(field.config.model) | translate }}\n  </span>\n  <span class=\"gs-field-error\"\n    *ngIf=\"validateRequired(false)\">\n    {{ requiredText(false) }}\n  </span>\n  <span class=\"gs-field-error\"\n    *ngIf=\"validateRequired(true)\">\n    {{ requiredText(true) }}\n  </span>\n</div>",
            styles: ["*{color:var(--gs-color-font,#706967);outline:0;box-sizing:border-box}input,option,select,textarea{border:none;outline:0;display:block;box-shadow:none;box-sizing:border-box}input::-webkit-input-placeholder,option::-webkit-input-placeholder,select::-webkit-input-placeholder,textarea::-webkit-input-placeholder{opacity:.5}input::-moz-placeholder,option::-moz-placeholder,select::-moz-placeholder,textarea::-moz-placeholder{opacity:.5}input::-ms-input-placeholder,option::-ms-input-placeholder,select::-ms-input-placeholder,textarea::-ms-input-placeholder{opacity:.5}input::placeholder,option::placeholder,select::placeholder,textarea::placeholder{opacity:.5}.disabled{opacity:var(--gs-disabled-opacity,.7);cursor:default;pointer-events:none}.button{-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out;cursor:pointer;border:none;text-align:center;font-weight:700;outline:0;padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-color,#fff);background:var(--gs-primary-button-background,#b8b4b4);border-radius:var(--gs-primary-button-border-radius,1rem)}.button:hover{opacity:.8}.button.button-primary{padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-color,#fff);background:var(--gs-primary-button-background,#ff2426);border:none;border-radius:var(--gs-primary-button-border-radius,1rem)}.button.button-secondary{padding:var(--gs-primary-button-padding,1rem);color:var(--gs-primary-button-background,#ff2426);background:0 0;border:2px solid var(--gs-primary-button-background,#ff2426);border-radius:var(--gs-primary-button-border-radius,1rem)}*,input,select,textarea{font-size:var(--gs-font-size,.9rem);font-family:inherit;background-color:transparent}.gs-no-select{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.gs-field{position:relative}.gs-field.gs-field-has-error .gs-field-box{border:2px solid #ff2426}.gs-field.gs-field-has-error .gs-field-error{display:block}.gs-field-box{border:2px solid var(--gs-input-border-color,none);display:-ms-grid;display:grid;background-color:var(--gs-input-background,#fff);padding:var(--gs-input-padding,12px);border-radius:var(--gs-input-border-radius,1rem);height:51px}.gs-field-box .gs-field-label{color:#706967;font-size:.6rem;font-weight:600;letter-spacing:.1em;line-height:1;text-transform:uppercase;-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1;color:var(--gs-input-color,#332927);opacity:.5}.gs-field-box .gs-field-input{outline:0;border:none;width:100%;margin:0;font-weight:600;font-size:1rem;line-height:1;padding:0;-ms-grid-column:1;grid-column:1;-ms-grid-row:2;grid-row:2}.gs-field-box .gs-field-input :focus,.gs-field-box .gs-field-input:focus{outline:0}.gs-field-box .gs-field-input::-webkit-input-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::-moz-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::-ms-input-placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-field-input::placeholder{color:var(--gs-input-color,#332927);opacity:.7;font-weight:400}.gs-field-box .gs-form-field_symbol{-ms-grid-column:2;grid-column:2;-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/3;-ms-grid-row-align:center;align-self:center;text-align:right}.gs-field-box.gs-field-box-full .gs-field-input{padding:.1rem 0 0}.gs-field-box.gs-input-check-box,.gs-field-box.gs-input-switch-box{-ms-grid-columns:1fr auto;grid-template-columns:1fr auto}.gs-field-box.gs-input-check-box .gs-field-label,.gs-field-box.gs-input-switch-box .gs-field-label{-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1;-ms-grid-row-align:center;align-self:center}.gs-field-box.gs-input-check-box .gs-input-check,.gs-field-box.gs-input-check-box .gs-input-switch,.gs-field-box.gs-input-switch-box .gs-input-check,.gs-field-box.gs-input-switch-box .gs-input-switch{-ms-grid-column:2;grid-column:2;-ms-grid-row:1;grid-row:1;-ms-grid-row-align:center;align-self:center}.gs-field-box.gs-field-box-icon{display:-ms-grid;display:grid;-ms-grid-columns:1fr 20px;grid-template-columns:1fr 20px}.gs-field-box.gs-field-box-icon .gs-field-icon{cursor:pointer;width:20px;fill:#706967;-ms-grid-column:2;grid-column:2;-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/3;-ms-grid-row-align:center;align-self:center}.gs-field-error,.gs-field-hint{font-size:.8rem;padding:.6rem 1rem;display:inline-block;margin-right:1rem}.gs-field-error{display:none;color:#ff2426}input{background:0 0;border:none;outline:0;margin:0;width:100%}input[type=number]{-moz-appearance:textfield}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.gs-field-input-two-data{display:-ms-grid;display:grid;-ms-grid-columns:auto -webkit-max-content auto;-ms-grid-columns:auto max-content auto;grid-template-columns:auto -webkit-max-content auto;grid-template-columns:auto max-content auto}.gs-field-input-two-data .gs-field-input-two-data-input-divider,.gs-field-input-two-data .gs-field-input-two-data-left,.gs-field-input-two-data .gs-field-input-two-data-right{-ms-grid-row:1!important;grid-row:1!important}.gs-field-input-two-data .gs-field-input-two-data-left{padding-right:.5rem;text-align:right;-ms-grid-column:1!important;grid-column:1!important}.gs-field-input-two-data .gs-field-input-two-data-left::-webkit-input-placeholder{text-align:left!important}.gs-field-input-two-data .gs-field-input-two-data-left::-moz-placeholder{text-align:left!important}.gs-field-input-two-data .gs-field-input-two-data-left::-ms-input-placeholder{text-align:left!important}.gs-field-input-two-data .gs-field-input-two-data-left::placeholder{text-align:left!important}.gs-field-input-two-data .gs-field-input-two-data-right{padding-left:.5rem;-ms-grid-column:3!important;grid-column:3!important}.gs-field-input-two-data .gs-field-input-two-data-divider{background-color:#e5e5e4;text-align:center;-ms-grid-row-align:center;align-self:center;padding:0 .5rem;-ms-grid-column:2!important;grid-column:2!important}"]
        })
    ], GsTwoDataInputComponent);
    return GsTwoDataInputComponent;
}(GsGenericFieldComponent));
export { GsTwoDataInputComponent };
//# sourceMappingURL=data:application/json;base64,